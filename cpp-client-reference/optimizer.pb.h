// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: optimizer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_optimizer_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_optimizer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_optimizer_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_optimizer_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[33]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_optimizer_2eproto;
namespace empowerops {
namespace volition {
namespace dto {
class BabelConstraint;
class BabelConstraintDefaultTypeInternal;
extern BabelConstraintDefaultTypeInternal _BabelConstraint_default_instance_;
class BabelScalar;
class BabelScalarDefaultTypeInternal;
extern BabelScalarDefaultTypeInternal _BabelScalar_default_instance_;
class DesignRow;
class DesignRowDefaultTypeInternal;
extern DesignRowDefaultTypeInternal _DesignRow_default_instance_;
class OptimizationResultsQueryDTO;
class OptimizationResultsQueryDTODefaultTypeInternal;
extern OptimizationResultsQueryDTODefaultTypeInternal _OptimizationResultsQueryDTO_default_instance_;
class OptimizationResultsResponseDTO;
class OptimizationResultsResponseDTODefaultTypeInternal;
extern OptimizationResultsResponseDTODefaultTypeInternal _OptimizationResultsResponseDTO_default_instance_;
class OptimizerGeneratedQueryDTO;
class OptimizerGeneratedQueryDTODefaultTypeInternal;
extern OptimizerGeneratedQueryDTODefaultTypeInternal _OptimizerGeneratedQueryDTO_default_instance_;
class OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification;
class OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotificationDefaultTypeInternal;
extern OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotificationDefaultTypeInternal _OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification_default_instance_;
class OptimizerGeneratedQueryDTO_OptimizationFinishedNotification;
class OptimizerGeneratedQueryDTO_OptimizationFinishedNotificationDefaultTypeInternal;
extern OptimizerGeneratedQueryDTO_OptimizationFinishedNotificationDefaultTypeInternal _OptimizerGeneratedQueryDTO_OptimizationFinishedNotification_default_instance_;
class OptimizerGeneratedQueryDTO_OptimizationStartedNotification;
class OptimizerGeneratedQueryDTO_OptimizationStartedNotificationDefaultTypeInternal;
extern OptimizerGeneratedQueryDTO_OptimizationStartedNotificationDefaultTypeInternal _OptimizerGeneratedQueryDTO_OptimizationStartedNotification_default_instance_;
class OptimizerGeneratedQueryDTO_SimulationCancelRequest;
class OptimizerGeneratedQueryDTO_SimulationCancelRequestDefaultTypeInternal;
extern OptimizerGeneratedQueryDTO_SimulationCancelRequestDefaultTypeInternal _OptimizerGeneratedQueryDTO_SimulationCancelRequest_default_instance_;
class OptimizerGeneratedQueryDTO_SimulationEvaluationRequest;
class OptimizerGeneratedQueryDTO_SimulationEvaluationRequestDefaultTypeInternal;
extern OptimizerGeneratedQueryDTO_SimulationEvaluationRequestDefaultTypeInternal _OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_default_instance_;
class OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse;
class OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUseDefaultTypeInternal;
extern OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUseDefaultTypeInternal _OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse_default_instance_;
class PrototypeInputParameter;
class PrototypeInputParameterDefaultTypeInternal;
extern PrototypeInputParameterDefaultTypeInternal _PrototypeInputParameter_default_instance_;
class PrototypeInputParameter_Continuous;
class PrototypeInputParameter_ContinuousDefaultTypeInternal;
extern PrototypeInputParameter_ContinuousDefaultTypeInternal _PrototypeInputParameter_Continuous_default_instance_;
class PrototypeInputParameter_DiscreteRange;
class PrototypeInputParameter_DiscreteRangeDefaultTypeInternal;
extern PrototypeInputParameter_DiscreteRangeDefaultTypeInternal _PrototypeInputParameter_DiscreteRange_default_instance_;
class PrototypeOutputParameter;
class PrototypeOutputParameterDefaultTypeInternal;
extern PrototypeOutputParameterDefaultTypeInternal _PrototypeOutputParameter_default_instance_;
class SimulationEvaluationCompletedResponseDTO;
class SimulationEvaluationCompletedResponseDTODefaultTypeInternal;
extern SimulationEvaluationCompletedResponseDTODefaultTypeInternal _SimulationEvaluationCompletedResponseDTO_default_instance_;
class SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse;
class SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUseDefaultTypeInternal;
extern SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUseDefaultTypeInternal _SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse_default_instance_;
class SimulationEvaluationErrorConfirmDTO;
class SimulationEvaluationErrorConfirmDTODefaultTypeInternal;
extern SimulationEvaluationErrorConfirmDTODefaultTypeInternal _SimulationEvaluationErrorConfirmDTO_default_instance_;
class SimulationEvaluationErrorResponseDTO;
class SimulationEvaluationErrorResponseDTODefaultTypeInternal;
extern SimulationEvaluationErrorResponseDTODefaultTypeInternal _SimulationEvaluationErrorResponseDTO_default_instance_;
class SimulationEvaluationResultConfirmDTO;
class SimulationEvaluationResultConfirmDTODefaultTypeInternal;
extern SimulationEvaluationResultConfirmDTODefaultTypeInternal _SimulationEvaluationResultConfirmDTO_default_instance_;
class StartOptimizationCommandDTO;
class StartOptimizationCommandDTODefaultTypeInternal;
extern StartOptimizationCommandDTODefaultTypeInternal _StartOptimizationCommandDTO_default_instance_;
class StartOptimizationCommandDTO_OptimizationSettings;
class StartOptimizationCommandDTO_OptimizationSettingsDefaultTypeInternal;
extern StartOptimizationCommandDTO_OptimizationSettingsDefaultTypeInternal _StartOptimizationCommandDTO_OptimizationSettings_default_instance_;
class StartOptimizationCommandDTO_ProblemDefinition;
class StartOptimizationCommandDTO_ProblemDefinitionDefaultTypeInternal;
extern StartOptimizationCommandDTO_ProblemDefinitionDefaultTypeInternal _StartOptimizationCommandDTO_ProblemDefinition_default_instance_;
class StartOptimizationCommandDTO_SimulationNode;
class StartOptimizationCommandDTO_SimulationNodeDefaultTypeInternal;
extern StartOptimizationCommandDTO_SimulationNodeDefaultTypeInternal _StartOptimizationCommandDTO_SimulationNode_default_instance_;
class StatusMessageCommandDTO;
class StatusMessageCommandDTODefaultTypeInternal;
extern StatusMessageCommandDTODefaultTypeInternal _StatusMessageCommandDTO_default_instance_;
class StatusMessageConfirmDTO;
class StatusMessageConfirmDTODefaultTypeInternal;
extern StatusMessageConfirmDTODefaultTypeInternal _StatusMessageConfirmDTO_default_instance_;
class StopOptimizationCommandDTO;
class StopOptimizationCommandDTODefaultTypeInternal;
extern StopOptimizationCommandDTODefaultTypeInternal _StopOptimizationCommandDTO_default_instance_;
class StopOptimizationConfirmDTO;
class StopOptimizationConfirmDTODefaultTypeInternal;
extern StopOptimizationConfirmDTODefaultTypeInternal _StopOptimizationConfirmDTO_default_instance_;
class UUID;
class UUIDDefaultTypeInternal;
extern UUIDDefaultTypeInternal _UUID_default_instance_;
class VariableMapping;
class VariableMappingDefaultTypeInternal;
extern VariableMappingDefaultTypeInternal _VariableMapping_default_instance_;
class VariableMapping_InputsEntry_DoNotUse;
class VariableMapping_InputsEntry_DoNotUseDefaultTypeInternal;
extern VariableMapping_InputsEntry_DoNotUseDefaultTypeInternal _VariableMapping_InputsEntry_DoNotUse_default_instance_;
class VariableMapping_OutputsEntry_DoNotUse;
class VariableMapping_OutputsEntry_DoNotUseDefaultTypeInternal;
extern VariableMapping_OutputsEntry_DoNotUseDefaultTypeInternal _VariableMapping_OutputsEntry_DoNotUse_default_instance_;
}  // namespace dto
}  // namespace volition
}  // namespace empowerops
PROTOBUF_NAMESPACE_OPEN
template<> ::empowerops::volition::dto::BabelConstraint* Arena::CreateMaybeMessage<::empowerops::volition::dto::BabelConstraint>(Arena*);
template<> ::empowerops::volition::dto::BabelScalar* Arena::CreateMaybeMessage<::empowerops::volition::dto::BabelScalar>(Arena*);
template<> ::empowerops::volition::dto::DesignRow* Arena::CreateMaybeMessage<::empowerops::volition::dto::DesignRow>(Arena*);
template<> ::empowerops::volition::dto::OptimizationResultsQueryDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizationResultsQueryDTO>(Arena*);
template<> ::empowerops::volition::dto::OptimizationResultsResponseDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizationResultsResponseDTO>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest>(Arena*);
template<> ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse* Arena::CreateMaybeMessage<::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse>(Arena*);
template<> ::empowerops::volition::dto::PrototypeInputParameter* Arena::CreateMaybeMessage<::empowerops::volition::dto::PrototypeInputParameter>(Arena*);
template<> ::empowerops::volition::dto::PrototypeInputParameter_Continuous* Arena::CreateMaybeMessage<::empowerops::volition::dto::PrototypeInputParameter_Continuous>(Arena*);
template<> ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* Arena::CreateMaybeMessage<::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange>(Arena*);
template<> ::empowerops::volition::dto::PrototypeOutputParameter* Arena::CreateMaybeMessage<::empowerops::volition::dto::PrototypeOutputParameter>(Arena*);
template<> ::empowerops::volition::dto::SimulationEvaluationCompletedResponseDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::SimulationEvaluationCompletedResponseDTO>(Arena*);
template<> ::empowerops::volition::dto::SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse* Arena::CreateMaybeMessage<::empowerops::volition::dto::SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse>(Arena*);
template<> ::empowerops::volition::dto::SimulationEvaluationErrorConfirmDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::SimulationEvaluationErrorConfirmDTO>(Arena*);
template<> ::empowerops::volition::dto::SimulationEvaluationErrorResponseDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::SimulationEvaluationErrorResponseDTO>(Arena*);
template<> ::empowerops::volition::dto::SimulationEvaluationResultConfirmDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::SimulationEvaluationResultConfirmDTO>(Arena*);
template<> ::empowerops::volition::dto::StartOptimizationCommandDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::StartOptimizationCommandDTO>(Arena*);
template<> ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* Arena::CreateMaybeMessage<::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings>(Arena*);
template<> ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* Arena::CreateMaybeMessage<::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition>(Arena*);
template<> ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* Arena::CreateMaybeMessage<::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode>(Arena*);
template<> ::empowerops::volition::dto::StatusMessageCommandDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::StatusMessageCommandDTO>(Arena*);
template<> ::empowerops::volition::dto::StatusMessageConfirmDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::StatusMessageConfirmDTO>(Arena*);
template<> ::empowerops::volition::dto::StopOptimizationCommandDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::StopOptimizationCommandDTO>(Arena*);
template<> ::empowerops::volition::dto::StopOptimizationConfirmDTO* Arena::CreateMaybeMessage<::empowerops::volition::dto::StopOptimizationConfirmDTO>(Arena*);
template<> ::empowerops::volition::dto::UUID* Arena::CreateMaybeMessage<::empowerops::volition::dto::UUID>(Arena*);
template<> ::empowerops::volition::dto::VariableMapping* Arena::CreateMaybeMessage<::empowerops::volition::dto::VariableMapping>(Arena*);
template<> ::empowerops::volition::dto::VariableMapping_InputsEntry_DoNotUse* Arena::CreateMaybeMessage<::empowerops::volition::dto::VariableMapping_InputsEntry_DoNotUse>(Arena*);
template<> ::empowerops::volition::dto::VariableMapping_OutputsEntry_DoNotUse* Arena::CreateMaybeMessage<::empowerops::volition::dto::VariableMapping_OutputsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace empowerops {
namespace volition {
namespace dto {

// ===================================================================

class StartOptimizationCommandDTO_ProblemDefinition PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition) */ {
 public:
  inline StartOptimizationCommandDTO_ProblemDefinition() : StartOptimizationCommandDTO_ProblemDefinition(nullptr) {}
  virtual ~StartOptimizationCommandDTO_ProblemDefinition();

  StartOptimizationCommandDTO_ProblemDefinition(const StartOptimizationCommandDTO_ProblemDefinition& from);
  StartOptimizationCommandDTO_ProblemDefinition(StartOptimizationCommandDTO_ProblemDefinition&& from) noexcept
    : StartOptimizationCommandDTO_ProblemDefinition() {
    *this = ::std::move(from);
  }

  inline StartOptimizationCommandDTO_ProblemDefinition& operator=(const StartOptimizationCommandDTO_ProblemDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartOptimizationCommandDTO_ProblemDefinition& operator=(StartOptimizationCommandDTO_ProblemDefinition&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartOptimizationCommandDTO_ProblemDefinition& default_instance();

  static inline const StartOptimizationCommandDTO_ProblemDefinition* internal_default_instance() {
    return reinterpret_cast<const StartOptimizationCommandDTO_ProblemDefinition*>(
               &_StartOptimizationCommandDTO_ProblemDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StartOptimizationCommandDTO_ProblemDefinition& a, StartOptimizationCommandDTO_ProblemDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(StartOptimizationCommandDTO_ProblemDefinition* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartOptimizationCommandDTO_ProblemDefinition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartOptimizationCommandDTO_ProblemDefinition* New() const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO_ProblemDefinition>(nullptr);
  }

  StartOptimizationCommandDTO_ProblemDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO_ProblemDefinition>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartOptimizationCommandDTO_ProblemDefinition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition";
  }
  protected:
  explicit StartOptimizationCommandDTO_ProblemDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputsFieldNumber = 1,
    kObjectivesFieldNumber = 2,
    kConstraintsFieldNumber = 3,
    kTransformsFieldNumber = 5,
  };
  // repeated .empowerops.volition.dto.PrototypeInputParameter inputs = 1;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;
  public:
  void clear_inputs();
  ::empowerops::volition::dto::PrototypeInputParameter* mutable_inputs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeInputParameter >*
      mutable_inputs();
  private:
  const ::empowerops::volition::dto::PrototypeInputParameter& _internal_inputs(int index) const;
  ::empowerops::volition::dto::PrototypeInputParameter* _internal_add_inputs();
  public:
  const ::empowerops::volition::dto::PrototypeInputParameter& inputs(int index) const;
  ::empowerops::volition::dto::PrototypeInputParameter* add_inputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeInputParameter >&
      inputs() const;

  // repeated .empowerops.volition.dto.PrototypeOutputParameter objectives = 2;
  int objectives_size() const;
  private:
  int _internal_objectives_size() const;
  public:
  void clear_objectives();
  ::empowerops::volition::dto::PrototypeOutputParameter* mutable_objectives(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeOutputParameter >*
      mutable_objectives();
  private:
  const ::empowerops::volition::dto::PrototypeOutputParameter& _internal_objectives(int index) const;
  ::empowerops::volition::dto::PrototypeOutputParameter* _internal_add_objectives();
  public:
  const ::empowerops::volition::dto::PrototypeOutputParameter& objectives(int index) const;
  ::empowerops::volition::dto::PrototypeOutputParameter* add_objectives();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeOutputParameter >&
      objectives() const;

  // repeated .empowerops.volition.dto.BabelConstraint constraints = 3;
  int constraints_size() const;
  private:
  int _internal_constraints_size() const;
  public:
  void clear_constraints();
  ::empowerops::volition::dto::BabelConstraint* mutable_constraints(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelConstraint >*
      mutable_constraints();
  private:
  const ::empowerops::volition::dto::BabelConstraint& _internal_constraints(int index) const;
  ::empowerops::volition::dto::BabelConstraint* _internal_add_constraints();
  public:
  const ::empowerops::volition::dto::BabelConstraint& constraints(int index) const;
  ::empowerops::volition::dto::BabelConstraint* add_constraints();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelConstraint >&
      constraints() const;

  // repeated .empowerops.volition.dto.BabelScalar transforms = 5;
  int transforms_size() const;
  private:
  int _internal_transforms_size() const;
  public:
  void clear_transforms();
  ::empowerops::volition::dto::BabelScalar* mutable_transforms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelScalar >*
      mutable_transforms();
  private:
  const ::empowerops::volition::dto::BabelScalar& _internal_transforms(int index) const;
  ::empowerops::volition::dto::BabelScalar* _internal_add_transforms();
  public:
  const ::empowerops::volition::dto::BabelScalar& transforms(int index) const;
  ::empowerops::volition::dto::BabelScalar* add_transforms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelScalar >&
      transforms() const;

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeInputParameter > inputs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeOutputParameter > objectives_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelConstraint > constraints_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelScalar > transforms_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StartOptimizationCommandDTO_SimulationNode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode) */ {
 public:
  inline StartOptimizationCommandDTO_SimulationNode() : StartOptimizationCommandDTO_SimulationNode(nullptr) {}
  virtual ~StartOptimizationCommandDTO_SimulationNode();

  StartOptimizationCommandDTO_SimulationNode(const StartOptimizationCommandDTO_SimulationNode& from);
  StartOptimizationCommandDTO_SimulationNode(StartOptimizationCommandDTO_SimulationNode&& from) noexcept
    : StartOptimizationCommandDTO_SimulationNode() {
    *this = ::std::move(from);
  }

  inline StartOptimizationCommandDTO_SimulationNode& operator=(const StartOptimizationCommandDTO_SimulationNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartOptimizationCommandDTO_SimulationNode& operator=(StartOptimizationCommandDTO_SimulationNode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartOptimizationCommandDTO_SimulationNode& default_instance();

  enum MappingCase {
    kAutoMap = 2,
    kMappingTable = 3,
    MAPPING_NOT_SET = 0,
  };

  static inline const StartOptimizationCommandDTO_SimulationNode* internal_default_instance() {
    return reinterpret_cast<const StartOptimizationCommandDTO_SimulationNode*>(
               &_StartOptimizationCommandDTO_SimulationNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StartOptimizationCommandDTO_SimulationNode& a, StartOptimizationCommandDTO_SimulationNode& b) {
    a.Swap(&b);
  }
  inline void Swap(StartOptimizationCommandDTO_SimulationNode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartOptimizationCommandDTO_SimulationNode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartOptimizationCommandDTO_SimulationNode* New() const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO_SimulationNode>(nullptr);
  }

  StartOptimizationCommandDTO_SimulationNode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO_SimulationNode>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartOptimizationCommandDTO_SimulationNode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode";
  }
  protected:
  explicit StartOptimizationCommandDTO_SimulationNode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputsFieldNumber = 4,
    kOutputsFieldNumber = 5,
    kNameFieldNumber = 1,
    kTimeOutFieldNumber = 6,
    kAutoMapFieldNumber = 2,
    kMappingTableFieldNumber = 3,
  };
  // repeated string inputs = 4;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;
  public:
  void clear_inputs();
  const std::string& inputs(int index) const;
  std::string* mutable_inputs(int index);
  void set_inputs(int index, const std::string& value);
  void set_inputs(int index, std::string&& value);
  void set_inputs(int index, const char* value);
  void set_inputs(int index, const char* value, size_t size);
  std::string* add_inputs();
  void add_inputs(const std::string& value);
  void add_inputs(std::string&& value);
  void add_inputs(const char* value);
  void add_inputs(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& inputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_inputs();
  private:
  const std::string& _internal_inputs(int index) const;
  std::string* _internal_add_inputs();
  public:

  // repeated string outputs = 5;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;
  public:
  void clear_outputs();
  const std::string& outputs(int index) const;
  std::string* mutable_outputs(int index);
  void set_outputs(int index, const std::string& value);
  void set_outputs(int index, std::string&& value);
  void set_outputs(int index, const char* value);
  void set_outputs(int index, const char* value, size_t size);
  std::string* add_outputs();
  void add_outputs(const std::string& value);
  void add_outputs(std::string&& value);
  void add_outputs(const char* value);
  void add_outputs(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& outputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_outputs();
  private:
  const std::string& _internal_outputs(int index) const;
  std::string* _internal_add_outputs();
  public:

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Duration time_out = 6;
  bool has_time_out() const;
  private:
  bool _internal_has_time_out() const;
  public:
  void clear_time_out();
  const PROTOBUF_NAMESPACE_ID::Duration& time_out() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_time_out();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_time_out();
  void set_allocated_time_out(PROTOBUF_NAMESPACE_ID::Duration* time_out);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_time_out() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_time_out();
  public:
  void unsafe_arena_set_allocated_time_out(
      PROTOBUF_NAMESPACE_ID::Duration* time_out);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_time_out();

  // bool auto_map = 2;
  private:
  bool _internal_has_auto_map() const;
  public:
  void clear_auto_map();
  bool auto_map() const;
  void set_auto_map(bool value);
  private:
  bool _internal_auto_map() const;
  void _internal_set_auto_map(bool value);
  public:

  // .empowerops.volition.dto.VariableMapping mapping_table = 3;
  bool has_mapping_table() const;
  private:
  bool _internal_has_mapping_table() const;
  public:
  void clear_mapping_table();
  const ::empowerops::volition::dto::VariableMapping& mapping_table() const;
  ::empowerops::volition::dto::VariableMapping* release_mapping_table();
  ::empowerops::volition::dto::VariableMapping* mutable_mapping_table();
  void set_allocated_mapping_table(::empowerops::volition::dto::VariableMapping* mapping_table);
  private:
  const ::empowerops::volition::dto::VariableMapping& _internal_mapping_table() const;
  ::empowerops::volition::dto::VariableMapping* _internal_mutable_mapping_table();
  public:
  void unsafe_arena_set_allocated_mapping_table(
      ::empowerops::volition::dto::VariableMapping* mapping_table);
  ::empowerops::volition::dto::VariableMapping* unsafe_arena_release_mapping_table();

  void clear_mapping();
  MappingCase mapping_case() const;
  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode)
 private:
  class _Internal;
  void set_has_auto_map();
  void set_has_mapping_table();

  inline bool has_mapping() const;
  inline void clear_has_mapping();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> inputs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> outputs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::Duration* time_out_;
  union MappingUnion {
    MappingUnion() {}
    bool auto_map_;
    ::empowerops::volition::dto::VariableMapping* mapping_table_;
  } mapping_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StartOptimizationCommandDTO_OptimizationSettings PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings) */ {
 public:
  inline StartOptimizationCommandDTO_OptimizationSettings() : StartOptimizationCommandDTO_OptimizationSettings(nullptr) {}
  virtual ~StartOptimizationCommandDTO_OptimizationSettings();

  StartOptimizationCommandDTO_OptimizationSettings(const StartOptimizationCommandDTO_OptimizationSettings& from);
  StartOptimizationCommandDTO_OptimizationSettings(StartOptimizationCommandDTO_OptimizationSettings&& from) noexcept
    : StartOptimizationCommandDTO_OptimizationSettings() {
    *this = ::std::move(from);
  }

  inline StartOptimizationCommandDTO_OptimizationSettings& operator=(const StartOptimizationCommandDTO_OptimizationSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartOptimizationCommandDTO_OptimizationSettings& operator=(StartOptimizationCommandDTO_OptimizationSettings&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartOptimizationCommandDTO_OptimizationSettings& default_instance();

  static inline const StartOptimizationCommandDTO_OptimizationSettings* internal_default_instance() {
    return reinterpret_cast<const StartOptimizationCommandDTO_OptimizationSettings*>(
               &_StartOptimizationCommandDTO_OptimizationSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StartOptimizationCommandDTO_OptimizationSettings& a, StartOptimizationCommandDTO_OptimizationSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(StartOptimizationCommandDTO_OptimizationSettings* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartOptimizationCommandDTO_OptimizationSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartOptimizationCommandDTO_OptimizationSettings* New() const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO_OptimizationSettings>(nullptr);
  }

  StartOptimizationCommandDTO_OptimizationSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO_OptimizationSettings>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartOptimizationCommandDTO_OptimizationSettings* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings";
  }
  protected:
  explicit StartOptimizationCommandDTO_OptimizationSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRunTimeFieldNumber = 11,
    kIterationCountFieldNumber = 12,
    kTargetObjectiveValueFieldNumber = 13,
  };
  // .google.protobuf.Duration run_time = 11;
  bool has_run_time() const;
  private:
  bool _internal_has_run_time() const;
  public:
  void clear_run_time();
  const PROTOBUF_NAMESPACE_ID::Duration& run_time() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_run_time();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_run_time();
  void set_allocated_run_time(PROTOBUF_NAMESPACE_ID::Duration* run_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_run_time() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_run_time();
  public:
  void unsafe_arena_set_allocated_run_time(
      PROTOBUF_NAMESPACE_ID::Duration* run_time);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_run_time();

  // .google.protobuf.UInt32Value iteration_count = 12;
  bool has_iteration_count() const;
  private:
  bool _internal_has_iteration_count() const;
  public:
  void clear_iteration_count();
  const PROTOBUF_NAMESPACE_ID::UInt32Value& iteration_count() const;
  PROTOBUF_NAMESPACE_ID::UInt32Value* release_iteration_count();
  PROTOBUF_NAMESPACE_ID::UInt32Value* mutable_iteration_count();
  void set_allocated_iteration_count(PROTOBUF_NAMESPACE_ID::UInt32Value* iteration_count);
  private:
  const PROTOBUF_NAMESPACE_ID::UInt32Value& _internal_iteration_count() const;
  PROTOBUF_NAMESPACE_ID::UInt32Value* _internal_mutable_iteration_count();
  public:
  void unsafe_arena_set_allocated_iteration_count(
      PROTOBUF_NAMESPACE_ID::UInt32Value* iteration_count);
  PROTOBUF_NAMESPACE_ID::UInt32Value* unsafe_arena_release_iteration_count();

  // .google.protobuf.DoubleValue target_objective_value = 13;
  bool has_target_objective_value() const;
  private:
  bool _internal_has_target_objective_value() const;
  public:
  void clear_target_objective_value();
  const PROTOBUF_NAMESPACE_ID::DoubleValue& target_objective_value() const;
  PROTOBUF_NAMESPACE_ID::DoubleValue* release_target_objective_value();
  PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_target_objective_value();
  void set_allocated_target_objective_value(PROTOBUF_NAMESPACE_ID::DoubleValue* target_objective_value);
  private:
  const PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_target_objective_value() const;
  PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_target_objective_value();
  public:
  void unsafe_arena_set_allocated_target_objective_value(
      PROTOBUF_NAMESPACE_ID::DoubleValue* target_objective_value);
  PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_target_objective_value();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Duration* run_time_;
  PROTOBUF_NAMESPACE_ID::UInt32Value* iteration_count_;
  PROTOBUF_NAMESPACE_ID::DoubleValue* target_objective_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StartOptimizationCommandDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StartOptimizationCommandDTO) */ {
 public:
  inline StartOptimizationCommandDTO() : StartOptimizationCommandDTO(nullptr) {}
  virtual ~StartOptimizationCommandDTO();

  StartOptimizationCommandDTO(const StartOptimizationCommandDTO& from);
  StartOptimizationCommandDTO(StartOptimizationCommandDTO&& from) noexcept
    : StartOptimizationCommandDTO() {
    *this = ::std::move(from);
  }

  inline StartOptimizationCommandDTO& operator=(const StartOptimizationCommandDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartOptimizationCommandDTO& operator=(StartOptimizationCommandDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartOptimizationCommandDTO& default_instance();

  static inline const StartOptimizationCommandDTO* internal_default_instance() {
    return reinterpret_cast<const StartOptimizationCommandDTO*>(
               &_StartOptimizationCommandDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StartOptimizationCommandDTO& a, StartOptimizationCommandDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(StartOptimizationCommandDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartOptimizationCommandDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartOptimizationCommandDTO* New() const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO>(nullptr);
  }

  StartOptimizationCommandDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartOptimizationCommandDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartOptimizationCommandDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StartOptimizationCommandDTO";
  }
  protected:
  explicit StartOptimizationCommandDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef StartOptimizationCommandDTO_ProblemDefinition ProblemDefinition;
  typedef StartOptimizationCommandDTO_SimulationNode SimulationNode;
  typedef StartOptimizationCommandDTO_OptimizationSettings OptimizationSettings;

  // accessors -------------------------------------------------------

  enum : int {
    kNodesFieldNumber = 2,
    kSeedPointsFieldNumber = 4,
    kProblemDefinitionFieldNumber = 1,
    kSettingsFieldNumber = 3,
  };
  // repeated .empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode nodes = 2;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;
  public:
  void clear_nodes();
  ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* mutable_nodes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode >*
      mutable_nodes();
  private:
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode& _internal_nodes(int index) const;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* _internal_add_nodes();
  public:
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode& nodes(int index) const;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* add_nodes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode >&
      nodes() const;

  // repeated .empowerops.volition.dto.DesignRow seed_points = 4;
  int seed_points_size() const;
  private:
  int _internal_seed_points_size() const;
  public:
  void clear_seed_points();
  ::empowerops::volition::dto::DesignRow* mutable_seed_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >*
      mutable_seed_points();
  private:
  const ::empowerops::volition::dto::DesignRow& _internal_seed_points(int index) const;
  ::empowerops::volition::dto::DesignRow* _internal_add_seed_points();
  public:
  const ::empowerops::volition::dto::DesignRow& seed_points(int index) const;
  ::empowerops::volition::dto::DesignRow* add_seed_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >&
      seed_points() const;

  // .empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition problem_definition = 1;
  bool has_problem_definition() const;
  private:
  bool _internal_has_problem_definition() const;
  public:
  void clear_problem_definition();
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition& problem_definition() const;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* release_problem_definition();
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* mutable_problem_definition();
  void set_allocated_problem_definition(::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* problem_definition);
  private:
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition& _internal_problem_definition() const;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* _internal_mutable_problem_definition();
  public:
  void unsafe_arena_set_allocated_problem_definition(
      ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* problem_definition);
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* unsafe_arena_release_problem_definition();

  // .empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings settings = 3;
  bool has_settings() const;
  private:
  bool _internal_has_settings() const;
  public:
  void clear_settings();
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings& settings() const;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* release_settings();
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* mutable_settings();
  void set_allocated_settings(::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* settings);
  private:
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings& _internal_settings() const;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* _internal_mutable_settings();
  public:
  void unsafe_arena_set_allocated_settings(
      ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* settings);
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* unsafe_arena_release_settings();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StartOptimizationCommandDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode > nodes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow > seed_points_;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* problem_definition_;
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* settings_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> SuperType;
  OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse();
  explicit OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse& other);
  static const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse*>(&_OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.InputVectorEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO_SimulationEvaluationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest) */ {
 public:
  inline OptimizerGeneratedQueryDTO_SimulationEvaluationRequest() : OptimizerGeneratedQueryDTO_SimulationEvaluationRequest(nullptr) {}
  virtual ~OptimizerGeneratedQueryDTO_SimulationEvaluationRequest();

  OptimizerGeneratedQueryDTO_SimulationEvaluationRequest(const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& from);
  OptimizerGeneratedQueryDTO_SimulationEvaluationRequest(OptimizerGeneratedQueryDTO_SimulationEvaluationRequest&& from) noexcept
    : OptimizerGeneratedQueryDTO_SimulationEvaluationRequest() {
    *this = ::std::move(from);
  }

  inline OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& operator=(const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& operator=(OptimizerGeneratedQueryDTO_SimulationEvaluationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& default_instance();

  static inline const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* internal_default_instance() {
    return reinterpret_cast<const OptimizerGeneratedQueryDTO_SimulationEvaluationRequest*>(
               &_OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& a, OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* New() const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_SimulationEvaluationRequest>(nullptr);
  }

  OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_SimulationEvaluationRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest";
  }
  protected:
  explicit OptimizerGeneratedQueryDTO_SimulationEvaluationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kInputVectorFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // map<string, double> input_vector = 2;
  int input_vector_size() const;
  private:
  int _internal_input_vector_size() const;
  public:
  void clear_input_vector();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      _internal_input_vector() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      _internal_mutable_input_vector();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      input_vector() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      mutable_input_vector();

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_InputVectorEntry_DoNotUse,
      std::string, double,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> input_vector_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO_SimulationCancelRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest) */ {
 public:
  inline OptimizerGeneratedQueryDTO_SimulationCancelRequest() : OptimizerGeneratedQueryDTO_SimulationCancelRequest(nullptr) {}
  virtual ~OptimizerGeneratedQueryDTO_SimulationCancelRequest();

  OptimizerGeneratedQueryDTO_SimulationCancelRequest(const OptimizerGeneratedQueryDTO_SimulationCancelRequest& from);
  OptimizerGeneratedQueryDTO_SimulationCancelRequest(OptimizerGeneratedQueryDTO_SimulationCancelRequest&& from) noexcept
    : OptimizerGeneratedQueryDTO_SimulationCancelRequest() {
    *this = ::std::move(from);
  }

  inline OptimizerGeneratedQueryDTO_SimulationCancelRequest& operator=(const OptimizerGeneratedQueryDTO_SimulationCancelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizerGeneratedQueryDTO_SimulationCancelRequest& operator=(OptimizerGeneratedQueryDTO_SimulationCancelRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizerGeneratedQueryDTO_SimulationCancelRequest& default_instance();

  static inline const OptimizerGeneratedQueryDTO_SimulationCancelRequest* internal_default_instance() {
    return reinterpret_cast<const OptimizerGeneratedQueryDTO_SimulationCancelRequest*>(
               &_OptimizerGeneratedQueryDTO_SimulationCancelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(OptimizerGeneratedQueryDTO_SimulationCancelRequest& a, OptimizerGeneratedQueryDTO_SimulationCancelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizerGeneratedQueryDTO_SimulationCancelRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizerGeneratedQueryDTO_SimulationCancelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizerGeneratedQueryDTO_SimulationCancelRequest* New() const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_SimulationCancelRequest>(nullptr);
  }

  OptimizerGeneratedQueryDTO_SimulationCancelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_SimulationCancelRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizerGeneratedQueryDTO_SimulationCancelRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest";
  }
  protected:
  explicit OptimizerGeneratedQueryDTO_SimulationCancelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO_OptimizationStartedNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification) */ {
 public:
  inline OptimizerGeneratedQueryDTO_OptimizationStartedNotification() : OptimizerGeneratedQueryDTO_OptimizationStartedNotification(nullptr) {}
  virtual ~OptimizerGeneratedQueryDTO_OptimizationStartedNotification();

  OptimizerGeneratedQueryDTO_OptimizationStartedNotification(const OptimizerGeneratedQueryDTO_OptimizationStartedNotification& from);
  OptimizerGeneratedQueryDTO_OptimizationStartedNotification(OptimizerGeneratedQueryDTO_OptimizationStartedNotification&& from) noexcept
    : OptimizerGeneratedQueryDTO_OptimizationStartedNotification() {
    *this = ::std::move(from);
  }

  inline OptimizerGeneratedQueryDTO_OptimizationStartedNotification& operator=(const OptimizerGeneratedQueryDTO_OptimizationStartedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizerGeneratedQueryDTO_OptimizationStartedNotification& operator=(OptimizerGeneratedQueryDTO_OptimizationStartedNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizerGeneratedQueryDTO_OptimizationStartedNotification& default_instance();

  static inline const OptimizerGeneratedQueryDTO_OptimizationStartedNotification* internal_default_instance() {
    return reinterpret_cast<const OptimizerGeneratedQueryDTO_OptimizationStartedNotification*>(
               &_OptimizerGeneratedQueryDTO_OptimizationStartedNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(OptimizerGeneratedQueryDTO_OptimizationStartedNotification& a, OptimizerGeneratedQueryDTO_OptimizationStartedNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizerGeneratedQueryDTO_OptimizationStartedNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizerGeneratedQueryDTO_OptimizationStartedNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizerGeneratedQueryDTO_OptimizationStartedNotification* New() const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_OptimizationStartedNotification>(nullptr);
  }

  OptimizerGeneratedQueryDTO_OptimizationStartedNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_OptimizationStartedNotification>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizerGeneratedQueryDTO_OptimizationStartedNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification";
  }
  protected:
  explicit OptimizerGeneratedQueryDTO_OptimizationStartedNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRunIDFieldNumber = 1,
  };
  // .empowerops.volition.dto.UUID run_ID = 1;
  bool has_run_id() const;
  private:
  bool _internal_has_run_id() const;
  public:
  void clear_run_id();
  const ::empowerops::volition::dto::UUID& run_id() const;
  ::empowerops::volition::dto::UUID* release_run_id();
  ::empowerops::volition::dto::UUID* mutable_run_id();
  void set_allocated_run_id(::empowerops::volition::dto::UUID* run_id);
  private:
  const ::empowerops::volition::dto::UUID& _internal_run_id() const;
  ::empowerops::volition::dto::UUID* _internal_mutable_run_id();
  public:
  void unsafe_arena_set_allocated_run_id(
      ::empowerops::volition::dto::UUID* run_id);
  ::empowerops::volition::dto::UUID* unsafe_arena_release_run_id();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::empowerops::volition::dto::UUID* run_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO_OptimizationFinishedNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification) */ {
 public:
  inline OptimizerGeneratedQueryDTO_OptimizationFinishedNotification() : OptimizerGeneratedQueryDTO_OptimizationFinishedNotification(nullptr) {}
  virtual ~OptimizerGeneratedQueryDTO_OptimizationFinishedNotification();

  OptimizerGeneratedQueryDTO_OptimizationFinishedNotification(const OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& from);
  OptimizerGeneratedQueryDTO_OptimizationFinishedNotification(OptimizerGeneratedQueryDTO_OptimizationFinishedNotification&& from) noexcept
    : OptimizerGeneratedQueryDTO_OptimizationFinishedNotification() {
    *this = ::std::move(from);
  }

  inline OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& operator=(const OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& operator=(OptimizerGeneratedQueryDTO_OptimizationFinishedNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& default_instance();

  static inline const OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* internal_default_instance() {
    return reinterpret_cast<const OptimizerGeneratedQueryDTO_OptimizationFinishedNotification*>(
               &_OptimizerGeneratedQueryDTO_OptimizationFinishedNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& a, OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* New() const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_OptimizationFinishedNotification>(nullptr);
  }

  OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_OptimizationFinishedNotification>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification";
  }
  protected:
  explicit OptimizerGeneratedQueryDTO_OptimizationFinishedNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRunIDFieldNumber = 1,
  };
  // .empowerops.volition.dto.UUID run_ID = 1;
  bool has_run_id() const;
  private:
  bool _internal_has_run_id() const;
  public:
  void clear_run_id();
  const ::empowerops::volition::dto::UUID& run_id() const;
  ::empowerops::volition::dto::UUID* release_run_id();
  ::empowerops::volition::dto::UUID* mutable_run_id();
  void set_allocated_run_id(::empowerops::volition::dto::UUID* run_id);
  private:
  const ::empowerops::volition::dto::UUID& _internal_run_id() const;
  ::empowerops::volition::dto::UUID* _internal_mutable_run_id();
  public:
  void unsafe_arena_set_allocated_run_id(
      ::empowerops::volition::dto::UUID* run_id);
  ::empowerops::volition::dto::UUID* unsafe_arena_release_run_id();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::empowerops::volition::dto::UUID* run_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification) */ {
 public:
  inline OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification() : OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification(nullptr) {}
  virtual ~OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification();

  OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification(const OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& from);
  OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification(OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification&& from) noexcept
    : OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification() {
    *this = ::std::move(from);
  }

  inline OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& operator=(const OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& operator=(OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& default_instance();

  static inline const OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* internal_default_instance() {
    return reinterpret_cast<const OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification*>(
               &_OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& a, OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* New() const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification>(nullptr);
  }

  OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification";
  }
  protected:
  explicit OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIssuesFieldNumber = 1,
  };
  // repeated string issues = 1;
  int issues_size() const;
  private:
  int _internal_issues_size() const;
  public:
  void clear_issues();
  const std::string& issues(int index) const;
  std::string* mutable_issues(int index);
  void set_issues(int index, const std::string& value);
  void set_issues(int index, std::string&& value);
  void set_issues(int index, const char* value);
  void set_issues(int index, const char* value, size_t size);
  std::string* add_issues();
  void add_issues(const std::string& value);
  void add_issues(std::string&& value);
  void add_issues(const char* value);
  void add_issues(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& issues() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_issues();
  private:
  const std::string& _internal_issues(int index) const;
  std::string* _internal_add_issues();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> issues_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizerGeneratedQueryDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizerGeneratedQueryDTO) */ {
 public:
  inline OptimizerGeneratedQueryDTO() : OptimizerGeneratedQueryDTO(nullptr) {}
  virtual ~OptimizerGeneratedQueryDTO();

  OptimizerGeneratedQueryDTO(const OptimizerGeneratedQueryDTO& from);
  OptimizerGeneratedQueryDTO(OptimizerGeneratedQueryDTO&& from) noexcept
    : OptimizerGeneratedQueryDTO() {
    *this = ::std::move(from);
  }

  inline OptimizerGeneratedQueryDTO& operator=(const OptimizerGeneratedQueryDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizerGeneratedQueryDTO& operator=(OptimizerGeneratedQueryDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizerGeneratedQueryDTO& default_instance();

  enum PurposeCase {
    kEvaluationRequest = 1,
    kCancelRequest = 3,
    kOptimizationStartedNotification = 5,
    kOptimizationFinishedNotification = 6,
    kOptimizationNotStartedNotification = 7,
    PURPOSE_NOT_SET = 0,
  };

  static inline const OptimizerGeneratedQueryDTO* internal_default_instance() {
    return reinterpret_cast<const OptimizerGeneratedQueryDTO*>(
               &_OptimizerGeneratedQueryDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(OptimizerGeneratedQueryDTO& a, OptimizerGeneratedQueryDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizerGeneratedQueryDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizerGeneratedQueryDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizerGeneratedQueryDTO* New() const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO>(nullptr);
  }

  OptimizerGeneratedQueryDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizerGeneratedQueryDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizerGeneratedQueryDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizerGeneratedQueryDTO";
  }
  protected:
  explicit OptimizerGeneratedQueryDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef OptimizerGeneratedQueryDTO_SimulationEvaluationRequest SimulationEvaluationRequest;
  typedef OptimizerGeneratedQueryDTO_SimulationCancelRequest SimulationCancelRequest;
  typedef OptimizerGeneratedQueryDTO_OptimizationStartedNotification OptimizationStartedNotification;
  typedef OptimizerGeneratedQueryDTO_OptimizationFinishedNotification OptimizationFinishedNotification;
  typedef OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification OptimizationFailedToStartNotification;

  // accessors -------------------------------------------------------

  enum : int {
    kEvaluationRequestFieldNumber = 1,
    kCancelRequestFieldNumber = 3,
    kOptimizationStartedNotificationFieldNumber = 5,
    kOptimizationFinishedNotificationFieldNumber = 6,
    kOptimizationNotStartedNotificationFieldNumber = 7,
  };
  // .empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest evaluation_request = 1;
  bool has_evaluation_request() const;
  private:
  bool _internal_has_evaluation_request() const;
  public:
  void clear_evaluation_request();
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& evaluation_request() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* release_evaluation_request();
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* mutable_evaluation_request();
  void set_allocated_evaluation_request(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* evaluation_request);
  private:
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& _internal_evaluation_request() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* _internal_mutable_evaluation_request();
  public:
  void unsafe_arena_set_allocated_evaluation_request(
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* evaluation_request);
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* unsafe_arena_release_evaluation_request();

  // .empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest cancel_request = 3;
  bool has_cancel_request() const;
  private:
  bool _internal_has_cancel_request() const;
  public:
  void clear_cancel_request();
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest& cancel_request() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* release_cancel_request();
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* mutable_cancel_request();
  void set_allocated_cancel_request(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* cancel_request);
  private:
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest& _internal_cancel_request() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* _internal_mutable_cancel_request();
  public:
  void unsafe_arena_set_allocated_cancel_request(
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* cancel_request);
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* unsafe_arena_release_cancel_request();

  // .empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification optimization_started_notification = 5;
  bool has_optimization_started_notification() const;
  private:
  bool _internal_has_optimization_started_notification() const;
  public:
  void clear_optimization_started_notification();
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification& optimization_started_notification() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* release_optimization_started_notification();
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* mutable_optimization_started_notification();
  void set_allocated_optimization_started_notification(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* optimization_started_notification);
  private:
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification& _internal_optimization_started_notification() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* _internal_mutable_optimization_started_notification();
  public:
  void unsafe_arena_set_allocated_optimization_started_notification(
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* optimization_started_notification);
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* unsafe_arena_release_optimization_started_notification();

  // .empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification optimization_finished_notification = 6;
  bool has_optimization_finished_notification() const;
  private:
  bool _internal_has_optimization_finished_notification() const;
  public:
  void clear_optimization_finished_notification();
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& optimization_finished_notification() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* release_optimization_finished_notification();
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* mutable_optimization_finished_notification();
  void set_allocated_optimization_finished_notification(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* optimization_finished_notification);
  private:
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& _internal_optimization_finished_notification() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* _internal_mutable_optimization_finished_notification();
  public:
  void unsafe_arena_set_allocated_optimization_finished_notification(
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* optimization_finished_notification);
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* unsafe_arena_release_optimization_finished_notification();

  // .empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification optimization_not_started_notification = 7;
  bool has_optimization_not_started_notification() const;
  private:
  bool _internal_has_optimization_not_started_notification() const;
  public:
  void clear_optimization_not_started_notification();
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& optimization_not_started_notification() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* release_optimization_not_started_notification();
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* mutable_optimization_not_started_notification();
  void set_allocated_optimization_not_started_notification(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* optimization_not_started_notification);
  private:
  const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& _internal_optimization_not_started_notification() const;
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* _internal_mutable_optimization_not_started_notification();
  public:
  void unsafe_arena_set_allocated_optimization_not_started_notification(
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* optimization_not_started_notification);
  ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* unsafe_arena_release_optimization_not_started_notification();

  void clear_purpose();
  PurposeCase purpose_case() const;
  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizerGeneratedQueryDTO)
 private:
  class _Internal;
  void set_has_evaluation_request();
  void set_has_cancel_request();
  void set_has_optimization_started_notification();
  void set_has_optimization_finished_notification();
  void set_has_optimization_not_started_notification();

  inline bool has_purpose() const;
  inline void clear_has_purpose();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union PurposeUnion {
    PurposeUnion() {}
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* evaluation_request_;
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* cancel_request_;
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* optimization_started_notification_;
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* optimization_finished_notification_;
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* optimization_not_started_notification_;
  } purpose_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> SuperType;
  SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse();
  explicit SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse& other);
  static const SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse*>(&_SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.OutputVectorEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[11];
  }

  public:
};

// -------------------------------------------------------------------

class SimulationEvaluationCompletedResponseDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO) */ {
 public:
  inline SimulationEvaluationCompletedResponseDTO() : SimulationEvaluationCompletedResponseDTO(nullptr) {}
  virtual ~SimulationEvaluationCompletedResponseDTO();

  SimulationEvaluationCompletedResponseDTO(const SimulationEvaluationCompletedResponseDTO& from);
  SimulationEvaluationCompletedResponseDTO(SimulationEvaluationCompletedResponseDTO&& from) noexcept
    : SimulationEvaluationCompletedResponseDTO() {
    *this = ::std::move(from);
  }

  inline SimulationEvaluationCompletedResponseDTO& operator=(const SimulationEvaluationCompletedResponseDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationEvaluationCompletedResponseDTO& operator=(SimulationEvaluationCompletedResponseDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationEvaluationCompletedResponseDTO& default_instance();

  static inline const SimulationEvaluationCompletedResponseDTO* internal_default_instance() {
    return reinterpret_cast<const SimulationEvaluationCompletedResponseDTO*>(
               &_SimulationEvaluationCompletedResponseDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SimulationEvaluationCompletedResponseDTO& a, SimulationEvaluationCompletedResponseDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationEvaluationCompletedResponseDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulationEvaluationCompletedResponseDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationEvaluationCompletedResponseDTO* New() const final {
    return CreateMaybeMessage<SimulationEvaluationCompletedResponseDTO>(nullptr);
  }

  SimulationEvaluationCompletedResponseDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationEvaluationCompletedResponseDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationEvaluationCompletedResponseDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO";
  }
  protected:
  explicit SimulationEvaluationCompletedResponseDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOutputVectorFieldNumber = 2,
    kNameFieldNumber = 1,
    kAbortOptimizationFieldNumber = 3,
  };
  // map<string, double> output_vector = 2;
  int output_vector_size() const;
  private:
  int _internal_output_vector_size() const;
  public:
  void clear_output_vector();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      _internal_output_vector() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      _internal_mutable_output_vector();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      output_vector() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      mutable_output_vector();

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bool abort_optimization = 3;
  void clear_abort_optimization();
  bool abort_optimization() const;
  void set_abort_optimization(bool value);
  private:
  bool _internal_abort_optimization() const;
  void _internal_set_abort_optimization(bool value);
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      SimulationEvaluationCompletedResponseDTO_OutputVectorEntry_DoNotUse,
      std::string, double,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> output_vector_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool abort_optimization_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class SimulationEvaluationResultConfirmDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.SimulationEvaluationResultConfirmDTO) */ {
 public:
  inline SimulationEvaluationResultConfirmDTO() : SimulationEvaluationResultConfirmDTO(nullptr) {}
  virtual ~SimulationEvaluationResultConfirmDTO();

  SimulationEvaluationResultConfirmDTO(const SimulationEvaluationResultConfirmDTO& from);
  SimulationEvaluationResultConfirmDTO(SimulationEvaluationResultConfirmDTO&& from) noexcept
    : SimulationEvaluationResultConfirmDTO() {
    *this = ::std::move(from);
  }

  inline SimulationEvaluationResultConfirmDTO& operator=(const SimulationEvaluationResultConfirmDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationEvaluationResultConfirmDTO& operator=(SimulationEvaluationResultConfirmDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationEvaluationResultConfirmDTO& default_instance();

  static inline const SimulationEvaluationResultConfirmDTO* internal_default_instance() {
    return reinterpret_cast<const SimulationEvaluationResultConfirmDTO*>(
               &_SimulationEvaluationResultConfirmDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SimulationEvaluationResultConfirmDTO& a, SimulationEvaluationResultConfirmDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationEvaluationResultConfirmDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulationEvaluationResultConfirmDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationEvaluationResultConfirmDTO* New() const final {
    return CreateMaybeMessage<SimulationEvaluationResultConfirmDTO>(nullptr);
  }

  SimulationEvaluationResultConfirmDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationEvaluationResultConfirmDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationEvaluationResultConfirmDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.SimulationEvaluationResultConfirmDTO";
  }
  protected:
  explicit SimulationEvaluationResultConfirmDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.SimulationEvaluationResultConfirmDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class SimulationEvaluationErrorResponseDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO) */ {
 public:
  inline SimulationEvaluationErrorResponseDTO() : SimulationEvaluationErrorResponseDTO(nullptr) {}
  virtual ~SimulationEvaluationErrorResponseDTO();

  SimulationEvaluationErrorResponseDTO(const SimulationEvaluationErrorResponseDTO& from);
  SimulationEvaluationErrorResponseDTO(SimulationEvaluationErrorResponseDTO&& from) noexcept
    : SimulationEvaluationErrorResponseDTO() {
    *this = ::std::move(from);
  }

  inline SimulationEvaluationErrorResponseDTO& operator=(const SimulationEvaluationErrorResponseDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationEvaluationErrorResponseDTO& operator=(SimulationEvaluationErrorResponseDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationEvaluationErrorResponseDTO& default_instance();

  static inline const SimulationEvaluationErrorResponseDTO* internal_default_instance() {
    return reinterpret_cast<const SimulationEvaluationErrorResponseDTO*>(
               &_SimulationEvaluationErrorResponseDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SimulationEvaluationErrorResponseDTO& a, SimulationEvaluationErrorResponseDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationEvaluationErrorResponseDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulationEvaluationErrorResponseDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationEvaluationErrorResponseDTO* New() const final {
    return CreateMaybeMessage<SimulationEvaluationErrorResponseDTO>(nullptr);
  }

  SimulationEvaluationErrorResponseDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationEvaluationErrorResponseDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationEvaluationErrorResponseDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.SimulationEvaluationErrorResponseDTO";
  }
  protected:
  explicit SimulationEvaluationErrorResponseDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMessageFieldNumber = 2,
    kExceptionFieldNumber = 3,
    kAbortOptimizationFieldNumber = 4,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // string exception = 3;
  void clear_exception();
  const std::string& exception() const;
  void set_exception(const std::string& value);
  void set_exception(std::string&& value);
  void set_exception(const char* value);
  void set_exception(const char* value, size_t size);
  std::string* mutable_exception();
  std::string* release_exception();
  void set_allocated_exception(std::string* exception);
  private:
  const std::string& _internal_exception() const;
  void _internal_set_exception(const std::string& value);
  std::string* _internal_mutable_exception();
  public:

  // bool abort_optimization = 4;
  void clear_abort_optimization();
  bool abort_optimization() const;
  void set_abort_optimization(bool value);
  private:
  bool _internal_abort_optimization() const;
  void _internal_set_abort_optimization(bool value);
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr exception_;
  bool abort_optimization_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class SimulationEvaluationErrorConfirmDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.SimulationEvaluationErrorConfirmDTO) */ {
 public:
  inline SimulationEvaluationErrorConfirmDTO() : SimulationEvaluationErrorConfirmDTO(nullptr) {}
  virtual ~SimulationEvaluationErrorConfirmDTO();

  SimulationEvaluationErrorConfirmDTO(const SimulationEvaluationErrorConfirmDTO& from);
  SimulationEvaluationErrorConfirmDTO(SimulationEvaluationErrorConfirmDTO&& from) noexcept
    : SimulationEvaluationErrorConfirmDTO() {
    *this = ::std::move(from);
  }

  inline SimulationEvaluationErrorConfirmDTO& operator=(const SimulationEvaluationErrorConfirmDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulationEvaluationErrorConfirmDTO& operator=(SimulationEvaluationErrorConfirmDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SimulationEvaluationErrorConfirmDTO& default_instance();

  static inline const SimulationEvaluationErrorConfirmDTO* internal_default_instance() {
    return reinterpret_cast<const SimulationEvaluationErrorConfirmDTO*>(
               &_SimulationEvaluationErrorConfirmDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SimulationEvaluationErrorConfirmDTO& a, SimulationEvaluationErrorConfirmDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(SimulationEvaluationErrorConfirmDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulationEvaluationErrorConfirmDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SimulationEvaluationErrorConfirmDTO* New() const final {
    return CreateMaybeMessage<SimulationEvaluationErrorConfirmDTO>(nullptr);
  }

  SimulationEvaluationErrorConfirmDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SimulationEvaluationErrorConfirmDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimulationEvaluationErrorConfirmDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.SimulationEvaluationErrorConfirmDTO";
  }
  protected:
  explicit SimulationEvaluationErrorConfirmDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.SimulationEvaluationErrorConfirmDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StatusMessageCommandDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StatusMessageCommandDTO) */ {
 public:
  inline StatusMessageCommandDTO() : StatusMessageCommandDTO(nullptr) {}
  virtual ~StatusMessageCommandDTO();

  StatusMessageCommandDTO(const StatusMessageCommandDTO& from);
  StatusMessageCommandDTO(StatusMessageCommandDTO&& from) noexcept
    : StatusMessageCommandDTO() {
    *this = ::std::move(from);
  }

  inline StatusMessageCommandDTO& operator=(const StatusMessageCommandDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusMessageCommandDTO& operator=(StatusMessageCommandDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StatusMessageCommandDTO& default_instance();

  static inline const StatusMessageCommandDTO* internal_default_instance() {
    return reinterpret_cast<const StatusMessageCommandDTO*>(
               &_StatusMessageCommandDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(StatusMessageCommandDTO& a, StatusMessageCommandDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusMessageCommandDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusMessageCommandDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatusMessageCommandDTO* New() const final {
    return CreateMaybeMessage<StatusMessageCommandDTO>(nullptr);
  }

  StatusMessageCommandDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatusMessageCommandDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusMessageCommandDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StatusMessageCommandDTO";
  }
  protected:
  explicit StatusMessageCommandDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMessageFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StatusMessageCommandDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StatusMessageConfirmDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StatusMessageConfirmDTO) */ {
 public:
  inline StatusMessageConfirmDTO() : StatusMessageConfirmDTO(nullptr) {}
  virtual ~StatusMessageConfirmDTO();

  StatusMessageConfirmDTO(const StatusMessageConfirmDTO& from);
  StatusMessageConfirmDTO(StatusMessageConfirmDTO&& from) noexcept
    : StatusMessageConfirmDTO() {
    *this = ::std::move(from);
  }

  inline StatusMessageConfirmDTO& operator=(const StatusMessageConfirmDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusMessageConfirmDTO& operator=(StatusMessageConfirmDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StatusMessageConfirmDTO& default_instance();

  static inline const StatusMessageConfirmDTO* internal_default_instance() {
    return reinterpret_cast<const StatusMessageConfirmDTO*>(
               &_StatusMessageConfirmDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(StatusMessageConfirmDTO& a, StatusMessageConfirmDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusMessageConfirmDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusMessageConfirmDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatusMessageConfirmDTO* New() const final {
    return CreateMaybeMessage<StatusMessageConfirmDTO>(nullptr);
  }

  StatusMessageConfirmDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatusMessageConfirmDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusMessageConfirmDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StatusMessageConfirmDTO";
  }
  protected:
  explicit StatusMessageConfirmDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StatusMessageConfirmDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StopOptimizationCommandDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StopOptimizationCommandDTO) */ {
 public:
  inline StopOptimizationCommandDTO() : StopOptimizationCommandDTO(nullptr) {}
  virtual ~StopOptimizationCommandDTO();

  StopOptimizationCommandDTO(const StopOptimizationCommandDTO& from);
  StopOptimizationCommandDTO(StopOptimizationCommandDTO&& from) noexcept
    : StopOptimizationCommandDTO() {
    *this = ::std::move(from);
  }

  inline StopOptimizationCommandDTO& operator=(const StopOptimizationCommandDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopOptimizationCommandDTO& operator=(StopOptimizationCommandDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopOptimizationCommandDTO& default_instance();

  static inline const StopOptimizationCommandDTO* internal_default_instance() {
    return reinterpret_cast<const StopOptimizationCommandDTO*>(
               &_StopOptimizationCommandDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(StopOptimizationCommandDTO& a, StopOptimizationCommandDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(StopOptimizationCommandDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopOptimizationCommandDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopOptimizationCommandDTO* New() const final {
    return CreateMaybeMessage<StopOptimizationCommandDTO>(nullptr);
  }

  StopOptimizationCommandDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopOptimizationCommandDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopOptimizationCommandDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StopOptimizationCommandDTO";
  }
  protected:
  explicit StopOptimizationCommandDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kRunIDFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .empowerops.volition.dto.UUID run_ID = 2;
  bool has_run_id() const;
  private:
  bool _internal_has_run_id() const;
  public:
  void clear_run_id();
  const ::empowerops::volition::dto::UUID& run_id() const;
  ::empowerops::volition::dto::UUID* release_run_id();
  ::empowerops::volition::dto::UUID* mutable_run_id();
  void set_allocated_run_id(::empowerops::volition::dto::UUID* run_id);
  private:
  const ::empowerops::volition::dto::UUID& _internal_run_id() const;
  ::empowerops::volition::dto::UUID* _internal_mutable_run_id();
  public:
  void unsafe_arena_set_allocated_run_id(
      ::empowerops::volition::dto::UUID* run_id);
  ::empowerops::volition::dto::UUID* unsafe_arena_release_run_id();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StopOptimizationCommandDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::empowerops::volition::dto::UUID* run_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class StopOptimizationConfirmDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.StopOptimizationConfirmDTO) */ {
 public:
  inline StopOptimizationConfirmDTO() : StopOptimizationConfirmDTO(nullptr) {}
  virtual ~StopOptimizationConfirmDTO();

  StopOptimizationConfirmDTO(const StopOptimizationConfirmDTO& from);
  StopOptimizationConfirmDTO(StopOptimizationConfirmDTO&& from) noexcept
    : StopOptimizationConfirmDTO() {
    *this = ::std::move(from);
  }

  inline StopOptimizationConfirmDTO& operator=(const StopOptimizationConfirmDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopOptimizationConfirmDTO& operator=(StopOptimizationConfirmDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopOptimizationConfirmDTO& default_instance();

  static inline const StopOptimizationConfirmDTO* internal_default_instance() {
    return reinterpret_cast<const StopOptimizationConfirmDTO*>(
               &_StopOptimizationConfirmDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(StopOptimizationConfirmDTO& a, StopOptimizationConfirmDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(StopOptimizationConfirmDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopOptimizationConfirmDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopOptimizationConfirmDTO* New() const final {
    return CreateMaybeMessage<StopOptimizationConfirmDTO>(nullptr);
  }

  StopOptimizationConfirmDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopOptimizationConfirmDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopOptimizationConfirmDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.StopOptimizationConfirmDTO";
  }
  protected:
  explicit StopOptimizationConfirmDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRunIDFieldNumber = 2,
  };
  // .empowerops.volition.dto.UUID run_ID = 2;
  bool has_run_id() const;
  private:
  bool _internal_has_run_id() const;
  public:
  void clear_run_id();
  const ::empowerops::volition::dto::UUID& run_id() const;
  ::empowerops::volition::dto::UUID* release_run_id();
  ::empowerops::volition::dto::UUID* mutable_run_id();
  void set_allocated_run_id(::empowerops::volition::dto::UUID* run_id);
  private:
  const ::empowerops::volition::dto::UUID& _internal_run_id() const;
  ::empowerops::volition::dto::UUID* _internal_mutable_run_id();
  public:
  void unsafe_arena_set_allocated_run_id(
      ::empowerops::volition::dto::UUID* run_id);
  ::empowerops::volition::dto::UUID* unsafe_arena_release_run_id();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.StopOptimizationConfirmDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::empowerops::volition::dto::UUID* run_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizationResultsQueryDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizationResultsQueryDTO) */ {
 public:
  inline OptimizationResultsQueryDTO() : OptimizationResultsQueryDTO(nullptr) {}
  virtual ~OptimizationResultsQueryDTO();

  OptimizationResultsQueryDTO(const OptimizationResultsQueryDTO& from);
  OptimizationResultsQueryDTO(OptimizationResultsQueryDTO&& from) noexcept
    : OptimizationResultsQueryDTO() {
    *this = ::std::move(from);
  }

  inline OptimizationResultsQueryDTO& operator=(const OptimizationResultsQueryDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizationResultsQueryDTO& operator=(OptimizationResultsQueryDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizationResultsQueryDTO& default_instance();

  static inline const OptimizationResultsQueryDTO* internal_default_instance() {
    return reinterpret_cast<const OptimizationResultsQueryDTO*>(
               &_OptimizationResultsQueryDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(OptimizationResultsQueryDTO& a, OptimizationResultsQueryDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizationResultsQueryDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizationResultsQueryDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizationResultsQueryDTO* New() const final {
    return CreateMaybeMessage<OptimizationResultsQueryDTO>(nullptr);
  }

  OptimizationResultsQueryDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizationResultsQueryDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizationResultsQueryDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizationResultsQueryDTO";
  }
  protected:
  explicit OptimizationResultsQueryDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kRunIDFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .empowerops.volition.dto.UUID run_ID = 2;
  bool has_run_id() const;
  private:
  bool _internal_has_run_id() const;
  public:
  void clear_run_id();
  const ::empowerops::volition::dto::UUID& run_id() const;
  ::empowerops::volition::dto::UUID* release_run_id();
  ::empowerops::volition::dto::UUID* mutable_run_id();
  void set_allocated_run_id(::empowerops::volition::dto::UUID* run_id);
  private:
  const ::empowerops::volition::dto::UUID& _internal_run_id() const;
  ::empowerops::volition::dto::UUID* _internal_mutable_run_id();
  public:
  void unsafe_arena_set_allocated_run_id(
      ::empowerops::volition::dto::UUID* run_id);
  ::empowerops::volition::dto::UUID* unsafe_arena_release_run_id();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizationResultsQueryDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::empowerops::volition::dto::UUID* run_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class OptimizationResultsResponseDTO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.OptimizationResultsResponseDTO) */ {
 public:
  inline OptimizationResultsResponseDTO() : OptimizationResultsResponseDTO(nullptr) {}
  virtual ~OptimizationResultsResponseDTO();

  OptimizationResultsResponseDTO(const OptimizationResultsResponseDTO& from);
  OptimizationResultsResponseDTO(OptimizationResultsResponseDTO&& from) noexcept
    : OptimizationResultsResponseDTO() {
    *this = ::std::move(from);
  }

  inline OptimizationResultsResponseDTO& operator=(const OptimizationResultsResponseDTO& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizationResultsResponseDTO& operator=(OptimizationResultsResponseDTO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizationResultsResponseDTO& default_instance();

  static inline const OptimizationResultsResponseDTO* internal_default_instance() {
    return reinterpret_cast<const OptimizationResultsResponseDTO*>(
               &_OptimizationResultsResponseDTO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(OptimizationResultsResponseDTO& a, OptimizationResultsResponseDTO& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizationResultsResponseDTO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizationResultsResponseDTO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizationResultsResponseDTO* New() const final {
    return CreateMaybeMessage<OptimizationResultsResponseDTO>(nullptr);
  }

  OptimizationResultsResponseDTO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizationResultsResponseDTO>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizationResultsResponseDTO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.OptimizationResultsResponseDTO";
  }
  protected:
  explicit OptimizationResultsResponseDTO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputColumnsFieldNumber = 7,
    kOutputColumnsFieldNumber = 8,
    kPointsFieldNumber = 9,
    kFrontierFieldNumber = 10,
    kRunIDFieldNumber = 1,
  };
  // repeated string input_columns = 7;
  int input_columns_size() const;
  private:
  int _internal_input_columns_size() const;
  public:
  void clear_input_columns();
  const std::string& input_columns(int index) const;
  std::string* mutable_input_columns(int index);
  void set_input_columns(int index, const std::string& value);
  void set_input_columns(int index, std::string&& value);
  void set_input_columns(int index, const char* value);
  void set_input_columns(int index, const char* value, size_t size);
  std::string* add_input_columns();
  void add_input_columns(const std::string& value);
  void add_input_columns(std::string&& value);
  void add_input_columns(const char* value);
  void add_input_columns(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& input_columns() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_input_columns();
  private:
  const std::string& _internal_input_columns(int index) const;
  std::string* _internal_add_input_columns();
  public:

  // repeated string output_columns = 8;
  int output_columns_size() const;
  private:
  int _internal_output_columns_size() const;
  public:
  void clear_output_columns();
  const std::string& output_columns(int index) const;
  std::string* mutable_output_columns(int index);
  void set_output_columns(int index, const std::string& value);
  void set_output_columns(int index, std::string&& value);
  void set_output_columns(int index, const char* value);
  void set_output_columns(int index, const char* value, size_t size);
  std::string* add_output_columns();
  void add_output_columns(const std::string& value);
  void add_output_columns(std::string&& value);
  void add_output_columns(const char* value);
  void add_output_columns(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& output_columns() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_output_columns();
  private:
  const std::string& _internal_output_columns(int index) const;
  std::string* _internal_add_output_columns();
  public:

  // repeated .empowerops.volition.dto.DesignRow points = 9;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::empowerops::volition::dto::DesignRow* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >*
      mutable_points();
  private:
  const ::empowerops::volition::dto::DesignRow& _internal_points(int index) const;
  ::empowerops::volition::dto::DesignRow* _internal_add_points();
  public:
  const ::empowerops::volition::dto::DesignRow& points(int index) const;
  ::empowerops::volition::dto::DesignRow* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >&
      points() const;

  // repeated .empowerops.volition.dto.DesignRow frontier = 10;
  int frontier_size() const;
  private:
  int _internal_frontier_size() const;
  public:
  void clear_frontier();
  ::empowerops::volition::dto::DesignRow* mutable_frontier(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >*
      mutable_frontier();
  private:
  const ::empowerops::volition::dto::DesignRow& _internal_frontier(int index) const;
  ::empowerops::volition::dto::DesignRow* _internal_add_frontier();
  public:
  const ::empowerops::volition::dto::DesignRow& frontier(int index) const;
  ::empowerops::volition::dto::DesignRow* add_frontier();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >&
      frontier() const;

  // .empowerops.volition.dto.UUID run_ID = 1;
  bool has_run_id() const;
  private:
  bool _internal_has_run_id() const;
  public:
  void clear_run_id();
  const ::empowerops::volition::dto::UUID& run_id() const;
  ::empowerops::volition::dto::UUID* release_run_id();
  ::empowerops::volition::dto::UUID* mutable_run_id();
  void set_allocated_run_id(::empowerops::volition::dto::UUID* run_id);
  private:
  const ::empowerops::volition::dto::UUID& _internal_run_id() const;
  ::empowerops::volition::dto::UUID* _internal_mutable_run_id();
  public:
  void unsafe_arena_set_allocated_run_id(
      ::empowerops::volition::dto::UUID* run_id);
  ::empowerops::volition::dto::UUID* unsafe_arena_release_run_id();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.OptimizationResultsResponseDTO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> input_columns_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> output_columns_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow > points_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow > frontier_;
  ::empowerops::volition::dto::UUID* run_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class PrototypeInputParameter_Continuous PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.PrototypeInputParameter.Continuous) */ {
 public:
  inline PrototypeInputParameter_Continuous() : PrototypeInputParameter_Continuous(nullptr) {}
  virtual ~PrototypeInputParameter_Continuous();

  PrototypeInputParameter_Continuous(const PrototypeInputParameter_Continuous& from);
  PrototypeInputParameter_Continuous(PrototypeInputParameter_Continuous&& from) noexcept
    : PrototypeInputParameter_Continuous() {
    *this = ::std::move(from);
  }

  inline PrototypeInputParameter_Continuous& operator=(const PrototypeInputParameter_Continuous& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrototypeInputParameter_Continuous& operator=(PrototypeInputParameter_Continuous&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PrototypeInputParameter_Continuous& default_instance();

  static inline const PrototypeInputParameter_Continuous* internal_default_instance() {
    return reinterpret_cast<const PrototypeInputParameter_Continuous*>(
               &_PrototypeInputParameter_Continuous_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(PrototypeInputParameter_Continuous& a, PrototypeInputParameter_Continuous& b) {
    a.Swap(&b);
  }
  inline void Swap(PrototypeInputParameter_Continuous* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrototypeInputParameter_Continuous* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PrototypeInputParameter_Continuous* New() const final {
    return CreateMaybeMessage<PrototypeInputParameter_Continuous>(nullptr);
  }

  PrototypeInputParameter_Continuous* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PrototypeInputParameter_Continuous>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrototypeInputParameter_Continuous* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.PrototypeInputParameter.Continuous";
  }
  protected:
  explicit PrototypeInputParameter_Continuous(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLowerBoundFieldNumber = 2,
    kUpperBoundFieldNumber = 3,
  };
  // double lower_bound = 2;
  void clear_lower_bound();
  double lower_bound() const;
  void set_lower_bound(double value);
  private:
  double _internal_lower_bound() const;
  void _internal_set_lower_bound(double value);
  public:

  // double upper_bound = 3;
  void clear_upper_bound();
  double upper_bound() const;
  void set_upper_bound(double value);
  private:
  double _internal_upper_bound() const;
  void _internal_set_upper_bound(double value);
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.PrototypeInputParameter.Continuous)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double lower_bound_;
  double upper_bound_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class PrototypeInputParameter_DiscreteRange PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange) */ {
 public:
  inline PrototypeInputParameter_DiscreteRange() : PrototypeInputParameter_DiscreteRange(nullptr) {}
  virtual ~PrototypeInputParameter_DiscreteRange();

  PrototypeInputParameter_DiscreteRange(const PrototypeInputParameter_DiscreteRange& from);
  PrototypeInputParameter_DiscreteRange(PrototypeInputParameter_DiscreteRange&& from) noexcept
    : PrototypeInputParameter_DiscreteRange() {
    *this = ::std::move(from);
  }

  inline PrototypeInputParameter_DiscreteRange& operator=(const PrototypeInputParameter_DiscreteRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrototypeInputParameter_DiscreteRange& operator=(PrototypeInputParameter_DiscreteRange&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PrototypeInputParameter_DiscreteRange& default_instance();

  static inline const PrototypeInputParameter_DiscreteRange* internal_default_instance() {
    return reinterpret_cast<const PrototypeInputParameter_DiscreteRange*>(
               &_PrototypeInputParameter_DiscreteRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(PrototypeInputParameter_DiscreteRange& a, PrototypeInputParameter_DiscreteRange& b) {
    a.Swap(&b);
  }
  inline void Swap(PrototypeInputParameter_DiscreteRange* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrototypeInputParameter_DiscreteRange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PrototypeInputParameter_DiscreteRange* New() const final {
    return CreateMaybeMessage<PrototypeInputParameter_DiscreteRange>(nullptr);
  }

  PrototypeInputParameter_DiscreteRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PrototypeInputParameter_DiscreteRange>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrototypeInputParameter_DiscreteRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.PrototypeInputParameter.DiscreteRange";
  }
  protected:
  explicit PrototypeInputParameter_DiscreteRange(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLowerBoundFieldNumber = 2,
    kUpperBoundFieldNumber = 3,
    kStepSizeFieldNumber = 4,
  };
  // double lower_bound = 2;
  void clear_lower_bound();
  double lower_bound() const;
  void set_lower_bound(double value);
  private:
  double _internal_lower_bound() const;
  void _internal_set_lower_bound(double value);
  public:

  // double upper_bound = 3;
  void clear_upper_bound();
  double upper_bound() const;
  void set_upper_bound(double value);
  private:
  double _internal_upper_bound() const;
  void _internal_set_upper_bound(double value);
  public:

  // double step_size = 4;
  void clear_step_size();
  double step_size() const;
  void set_step_size(double value);
  private:
  double _internal_step_size() const;
  void _internal_set_step_size(double value);
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double lower_bound_;
  double upper_bound_;
  double step_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class PrototypeInputParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.PrototypeInputParameter) */ {
 public:
  inline PrototypeInputParameter() : PrototypeInputParameter(nullptr) {}
  virtual ~PrototypeInputParameter();

  PrototypeInputParameter(const PrototypeInputParameter& from);
  PrototypeInputParameter(PrototypeInputParameter&& from) noexcept
    : PrototypeInputParameter() {
    *this = ::std::move(from);
  }

  inline PrototypeInputParameter& operator=(const PrototypeInputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrototypeInputParameter& operator=(PrototypeInputParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PrototypeInputParameter& default_instance();

  enum DomainCase {
    kContinuous = 4,
    kDiscreteRange = 5,
    DOMAIN_NOT_SET = 0,
  };

  static inline const PrototypeInputParameter* internal_default_instance() {
    return reinterpret_cast<const PrototypeInputParameter*>(
               &_PrototypeInputParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(PrototypeInputParameter& a, PrototypeInputParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(PrototypeInputParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrototypeInputParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PrototypeInputParameter* New() const final {
    return CreateMaybeMessage<PrototypeInputParameter>(nullptr);
  }

  PrototypeInputParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PrototypeInputParameter>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrototypeInputParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.PrototypeInputParameter";
  }
  protected:
  explicit PrototypeInputParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PrototypeInputParameter_Continuous Continuous;
  typedef PrototypeInputParameter_DiscreteRange DiscreteRange;

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kContinuousFieldNumber = 4,
    kDiscreteRangeFieldNumber = 5,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .empowerops.volition.dto.PrototypeInputParameter.Continuous continuous = 4;
  bool has_continuous() const;
  private:
  bool _internal_has_continuous() const;
  public:
  void clear_continuous();
  const ::empowerops::volition::dto::PrototypeInputParameter_Continuous& continuous() const;
  ::empowerops::volition::dto::PrototypeInputParameter_Continuous* release_continuous();
  ::empowerops::volition::dto::PrototypeInputParameter_Continuous* mutable_continuous();
  void set_allocated_continuous(::empowerops::volition::dto::PrototypeInputParameter_Continuous* continuous);
  private:
  const ::empowerops::volition::dto::PrototypeInputParameter_Continuous& _internal_continuous() const;
  ::empowerops::volition::dto::PrototypeInputParameter_Continuous* _internal_mutable_continuous();
  public:
  void unsafe_arena_set_allocated_continuous(
      ::empowerops::volition::dto::PrototypeInputParameter_Continuous* continuous);
  ::empowerops::volition::dto::PrototypeInputParameter_Continuous* unsafe_arena_release_continuous();

  // .empowerops.volition.dto.PrototypeInputParameter.DiscreteRange discrete_range = 5;
  bool has_discrete_range() const;
  private:
  bool _internal_has_discrete_range() const;
  public:
  void clear_discrete_range();
  const ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange& discrete_range() const;
  ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* release_discrete_range();
  ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* mutable_discrete_range();
  void set_allocated_discrete_range(::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* discrete_range);
  private:
  const ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange& _internal_discrete_range() const;
  ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* _internal_mutable_discrete_range();
  public:
  void unsafe_arena_set_allocated_discrete_range(
      ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* discrete_range);
  ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* unsafe_arena_release_discrete_range();

  void clear_domain();
  DomainCase domain_case() const;
  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.PrototypeInputParameter)
 private:
  class _Internal;
  void set_has_continuous();
  void set_has_discrete_range();

  inline bool has_domain() const;
  inline void clear_has_domain();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  union DomainUnion {
    DomainUnion() {}
    ::empowerops::volition::dto::PrototypeInputParameter_Continuous* continuous_;
    ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* discrete_range_;
  } domain_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class PrototypeOutputParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.PrototypeOutputParameter) */ {
 public:
  inline PrototypeOutputParameter() : PrototypeOutputParameter(nullptr) {}
  virtual ~PrototypeOutputParameter();

  PrototypeOutputParameter(const PrototypeOutputParameter& from);
  PrototypeOutputParameter(PrototypeOutputParameter&& from) noexcept
    : PrototypeOutputParameter() {
    *this = ::std::move(from);
  }

  inline PrototypeOutputParameter& operator=(const PrototypeOutputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrototypeOutputParameter& operator=(PrototypeOutputParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PrototypeOutputParameter& default_instance();

  static inline const PrototypeOutputParameter* internal_default_instance() {
    return reinterpret_cast<const PrototypeOutputParameter*>(
               &_PrototypeOutputParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(PrototypeOutputParameter& a, PrototypeOutputParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(PrototypeOutputParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrototypeOutputParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PrototypeOutputParameter* New() const final {
    return CreateMaybeMessage<PrototypeOutputParameter>(nullptr);
  }

  PrototypeOutputParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PrototypeOutputParameter>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrototypeOutputParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.PrototypeOutputParameter";
  }
  protected:
  explicit PrototypeOutputParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.PrototypeOutputParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class VariableMapping_InputsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<VariableMapping_InputsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<VariableMapping_InputsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  VariableMapping_InputsEntry_DoNotUse();
  explicit VariableMapping_InputsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const VariableMapping_InputsEntry_DoNotUse& other);
  static const VariableMapping_InputsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const VariableMapping_InputsEntry_DoNotUse*>(&_VariableMapping_InputsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "empowerops.volition.dto.VariableMapping.InputsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "empowerops.volition.dto.VariableMapping.InputsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[26];
  }

  public:
};

// -------------------------------------------------------------------

class VariableMapping_OutputsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<VariableMapping_OutputsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<VariableMapping_OutputsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  VariableMapping_OutputsEntry_DoNotUse();
  explicit VariableMapping_OutputsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const VariableMapping_OutputsEntry_DoNotUse& other);
  static const VariableMapping_OutputsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const VariableMapping_OutputsEntry_DoNotUse*>(&_VariableMapping_OutputsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "empowerops.volition.dto.VariableMapping.OutputsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "empowerops.volition.dto.VariableMapping.OutputsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[27];
  }

  public:
};

// -------------------------------------------------------------------

class VariableMapping PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.VariableMapping) */ {
 public:
  inline VariableMapping() : VariableMapping(nullptr) {}
  virtual ~VariableMapping();

  VariableMapping(const VariableMapping& from);
  VariableMapping(VariableMapping&& from) noexcept
    : VariableMapping() {
    *this = ::std::move(from);
  }

  inline VariableMapping& operator=(const VariableMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline VariableMapping& operator=(VariableMapping&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VariableMapping& default_instance();

  static inline const VariableMapping* internal_default_instance() {
    return reinterpret_cast<const VariableMapping*>(
               &_VariableMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(VariableMapping& a, VariableMapping& b) {
    a.Swap(&b);
  }
  inline void Swap(VariableMapping* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VariableMapping* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VariableMapping* New() const final {
    return CreateMaybeMessage<VariableMapping>(nullptr);
  }

  VariableMapping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VariableMapping>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VariableMapping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.VariableMapping";
  }
  protected:
  explicit VariableMapping(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kInputsFieldNumber = 1,
    kOutputsFieldNumber = 2,
  };
  // map<string, string> inputs = 1;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;
  public:
  void clear_inputs();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_inputs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_inputs();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      inputs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_inputs();

  // map<string, string> outputs = 2;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;
  public:
  void clear_outputs();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_outputs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_outputs();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      outputs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_outputs();

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.VariableMapping)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      VariableMapping_InputsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> inputs_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      VariableMapping_OutputsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> outputs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class BabelConstraint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.BabelConstraint) */ {
 public:
  inline BabelConstraint() : BabelConstraint(nullptr) {}
  virtual ~BabelConstraint();

  BabelConstraint(const BabelConstraint& from);
  BabelConstraint(BabelConstraint&& from) noexcept
    : BabelConstraint() {
    *this = ::std::move(from);
  }

  inline BabelConstraint& operator=(const BabelConstraint& from) {
    CopyFrom(from);
    return *this;
  }
  inline BabelConstraint& operator=(BabelConstraint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BabelConstraint& default_instance();

  static inline const BabelConstraint* internal_default_instance() {
    return reinterpret_cast<const BabelConstraint*>(
               &_BabelConstraint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(BabelConstraint& a, BabelConstraint& b) {
    a.Swap(&b);
  }
  inline void Swap(BabelConstraint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BabelConstraint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BabelConstraint* New() const final {
    return CreateMaybeMessage<BabelConstraint>(nullptr);
  }

  BabelConstraint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BabelConstraint>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BabelConstraint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.BabelConstraint";
  }
  protected:
  explicit BabelConstraint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputNameFieldNumber = 1,
    kBooleanExpressionFieldNumber = 2,
  };
  // string output_name = 1;
  void clear_output_name();
  const std::string& output_name() const;
  void set_output_name(const std::string& value);
  void set_output_name(std::string&& value);
  void set_output_name(const char* value);
  void set_output_name(const char* value, size_t size);
  std::string* mutable_output_name();
  std::string* release_output_name();
  void set_allocated_output_name(std::string* output_name);
  private:
  const std::string& _internal_output_name() const;
  void _internal_set_output_name(const std::string& value);
  std::string* _internal_mutable_output_name();
  public:

  // string boolean_expression = 2;
  void clear_boolean_expression();
  const std::string& boolean_expression() const;
  void set_boolean_expression(const std::string& value);
  void set_boolean_expression(std::string&& value);
  void set_boolean_expression(const char* value);
  void set_boolean_expression(const char* value, size_t size);
  std::string* mutable_boolean_expression();
  std::string* release_boolean_expression();
  void set_allocated_boolean_expression(std::string* boolean_expression);
  private:
  const std::string& _internal_boolean_expression() const;
  void _internal_set_boolean_expression(const std::string& value);
  std::string* _internal_mutable_boolean_expression();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.BabelConstraint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boolean_expression_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class BabelScalar PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.BabelScalar) */ {
 public:
  inline BabelScalar() : BabelScalar(nullptr) {}
  virtual ~BabelScalar();

  BabelScalar(const BabelScalar& from);
  BabelScalar(BabelScalar&& from) noexcept
    : BabelScalar() {
    *this = ::std::move(from);
  }

  inline BabelScalar& operator=(const BabelScalar& from) {
    CopyFrom(from);
    return *this;
  }
  inline BabelScalar& operator=(BabelScalar&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BabelScalar& default_instance();

  static inline const BabelScalar* internal_default_instance() {
    return reinterpret_cast<const BabelScalar*>(
               &_BabelScalar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(BabelScalar& a, BabelScalar& b) {
    a.Swap(&b);
  }
  inline void Swap(BabelScalar* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BabelScalar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BabelScalar* New() const final {
    return CreateMaybeMessage<BabelScalar>(nullptr);
  }

  BabelScalar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BabelScalar>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BabelScalar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.BabelScalar";
  }
  protected:
  explicit BabelScalar(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputNameFieldNumber = 1,
    kScalarExpressionFieldNumber = 2,
  };
  // string output_name = 1;
  void clear_output_name();
  const std::string& output_name() const;
  void set_output_name(const std::string& value);
  void set_output_name(std::string&& value);
  void set_output_name(const char* value);
  void set_output_name(const char* value, size_t size);
  std::string* mutable_output_name();
  std::string* release_output_name();
  void set_allocated_output_name(std::string* output_name);
  private:
  const std::string& _internal_output_name() const;
  void _internal_set_output_name(const std::string& value);
  std::string* _internal_mutable_output_name();
  public:

  // string scalar_expression = 2;
  void clear_scalar_expression();
  const std::string& scalar_expression() const;
  void set_scalar_expression(const std::string& value);
  void set_scalar_expression(std::string&& value);
  void set_scalar_expression(const char* value);
  void set_scalar_expression(const char* value, size_t size);
  std::string* mutable_scalar_expression();
  std::string* release_scalar_expression();
  void set_allocated_scalar_expression(std::string* scalar_expression);
  private:
  const std::string& _internal_scalar_expression() const;
  void _internal_set_scalar_expression(const std::string& value);
  std::string* _internal_mutable_scalar_expression();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.BabelScalar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr output_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr scalar_expression_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class DesignRow PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.DesignRow) */ {
 public:
  inline DesignRow() : DesignRow(nullptr) {}
  virtual ~DesignRow();

  DesignRow(const DesignRow& from);
  DesignRow(DesignRow&& from) noexcept
    : DesignRow() {
    *this = ::std::move(from);
  }

  inline DesignRow& operator=(const DesignRow& from) {
    CopyFrom(from);
    return *this;
  }
  inline DesignRow& operator=(DesignRow&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DesignRow& default_instance();

  static inline const DesignRow* internal_default_instance() {
    return reinterpret_cast<const DesignRow*>(
               &_DesignRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(DesignRow& a, DesignRow& b) {
    a.Swap(&b);
  }
  inline void Swap(DesignRow* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DesignRow* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DesignRow* New() const final {
    return CreateMaybeMessage<DesignRow>(nullptr);
  }

  DesignRow* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DesignRow>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DesignRow* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.DesignRow";
  }
  protected:
  explicit DesignRow(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputsFieldNumber = 1,
    kOutputsFieldNumber = 2,
    kIsFeasibleFieldNumber = 3,
  };
  // repeated double inputs = 1;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;
  public:
  void clear_inputs();
  private:
  double _internal_inputs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_inputs() const;
  void _internal_add_inputs(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_inputs();
  public:
  double inputs(int index) const;
  void set_inputs(int index, double value);
  void add_inputs(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      inputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_inputs();

  // repeated double outputs = 2;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;
  public:
  void clear_outputs();
  private:
  double _internal_outputs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_outputs() const;
  void _internal_add_outputs(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_outputs();
  public:
  double outputs(int index) const;
  void set_outputs(int index, double value);
  void add_outputs(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      outputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_outputs();

  // bool is_feasible = 3;
  void clear_is_feasible();
  bool is_feasible() const;
  void set_is_feasible(bool value);
  private:
  bool _internal_is_feasible() const;
  void _internal_set_is_feasible(bool value);
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.DesignRow)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > inputs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > outputs_;
  bool is_feasible_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// -------------------------------------------------------------------

class UUID PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:empowerops.volition.dto.UUID) */ {
 public:
  inline UUID() : UUID(nullptr) {}
  virtual ~UUID();

  UUID(const UUID& from);
  UUID(UUID&& from) noexcept
    : UUID() {
    *this = ::std::move(from);
  }

  inline UUID& operator=(const UUID& from) {
    CopyFrom(from);
    return *this;
  }
  inline UUID& operator=(UUID&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UUID& default_instance();

  static inline const UUID* internal_default_instance() {
    return reinterpret_cast<const UUID*>(
               &_UUID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(UUID& a, UUID& b) {
    a.Swap(&b);
  }
  inline void Swap(UUID* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UUID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UUID* New() const final {
    return CreateMaybeMessage<UUID>(nullptr);
  }

  UUID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UUID>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UUID* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "empowerops.volition.dto.UUID";
  }
  protected:
  explicit UUID(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_optimizer_2eproto);
    return ::descriptor_table_optimizer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:empowerops.volition.dto.UUID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StartOptimizationCommandDTO_ProblemDefinition

// repeated .empowerops.volition.dto.PrototypeInputParameter inputs = 1;
inline int StartOptimizationCommandDTO_ProblemDefinition::_internal_inputs_size() const {
  return inputs_.size();
}
inline int StartOptimizationCommandDTO_ProblemDefinition::inputs_size() const {
  return _internal_inputs_size();
}
inline void StartOptimizationCommandDTO_ProblemDefinition::clear_inputs() {
  inputs_.Clear();
}
inline ::empowerops::volition::dto::PrototypeInputParameter* StartOptimizationCommandDTO_ProblemDefinition::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.inputs)
  return inputs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeInputParameter >*
StartOptimizationCommandDTO_ProblemDefinition::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.inputs)
  return &inputs_;
}
inline const ::empowerops::volition::dto::PrototypeInputParameter& StartOptimizationCommandDTO_ProblemDefinition::_internal_inputs(int index) const {
  return inputs_.Get(index);
}
inline const ::empowerops::volition::dto::PrototypeInputParameter& StartOptimizationCommandDTO_ProblemDefinition::inputs(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.inputs)
  return _internal_inputs(index);
}
inline ::empowerops::volition::dto::PrototypeInputParameter* StartOptimizationCommandDTO_ProblemDefinition::_internal_add_inputs() {
  return inputs_.Add();
}
inline ::empowerops::volition::dto::PrototypeInputParameter* StartOptimizationCommandDTO_ProblemDefinition::add_inputs() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.inputs)
  return _internal_add_inputs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeInputParameter >&
StartOptimizationCommandDTO_ProblemDefinition::inputs() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.inputs)
  return inputs_;
}

// repeated .empowerops.volition.dto.BabelScalar transforms = 5;
inline int StartOptimizationCommandDTO_ProblemDefinition::_internal_transforms_size() const {
  return transforms_.size();
}
inline int StartOptimizationCommandDTO_ProblemDefinition::transforms_size() const {
  return _internal_transforms_size();
}
inline void StartOptimizationCommandDTO_ProblemDefinition::clear_transforms() {
  transforms_.Clear();
}
inline ::empowerops::volition::dto::BabelScalar* StartOptimizationCommandDTO_ProblemDefinition::mutable_transforms(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.transforms)
  return transforms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelScalar >*
StartOptimizationCommandDTO_ProblemDefinition::mutable_transforms() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.transforms)
  return &transforms_;
}
inline const ::empowerops::volition::dto::BabelScalar& StartOptimizationCommandDTO_ProblemDefinition::_internal_transforms(int index) const {
  return transforms_.Get(index);
}
inline const ::empowerops::volition::dto::BabelScalar& StartOptimizationCommandDTO_ProblemDefinition::transforms(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.transforms)
  return _internal_transforms(index);
}
inline ::empowerops::volition::dto::BabelScalar* StartOptimizationCommandDTO_ProblemDefinition::_internal_add_transforms() {
  return transforms_.Add();
}
inline ::empowerops::volition::dto::BabelScalar* StartOptimizationCommandDTO_ProblemDefinition::add_transforms() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.transforms)
  return _internal_add_transforms();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelScalar >&
StartOptimizationCommandDTO_ProblemDefinition::transforms() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.transforms)
  return transforms_;
}

// repeated .empowerops.volition.dto.PrototypeOutputParameter objectives = 2;
inline int StartOptimizationCommandDTO_ProblemDefinition::_internal_objectives_size() const {
  return objectives_.size();
}
inline int StartOptimizationCommandDTO_ProblemDefinition::objectives_size() const {
  return _internal_objectives_size();
}
inline void StartOptimizationCommandDTO_ProblemDefinition::clear_objectives() {
  objectives_.Clear();
}
inline ::empowerops::volition::dto::PrototypeOutputParameter* StartOptimizationCommandDTO_ProblemDefinition::mutable_objectives(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.objectives)
  return objectives_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeOutputParameter >*
StartOptimizationCommandDTO_ProblemDefinition::mutable_objectives() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.objectives)
  return &objectives_;
}
inline const ::empowerops::volition::dto::PrototypeOutputParameter& StartOptimizationCommandDTO_ProblemDefinition::_internal_objectives(int index) const {
  return objectives_.Get(index);
}
inline const ::empowerops::volition::dto::PrototypeOutputParameter& StartOptimizationCommandDTO_ProblemDefinition::objectives(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.objectives)
  return _internal_objectives(index);
}
inline ::empowerops::volition::dto::PrototypeOutputParameter* StartOptimizationCommandDTO_ProblemDefinition::_internal_add_objectives() {
  return objectives_.Add();
}
inline ::empowerops::volition::dto::PrototypeOutputParameter* StartOptimizationCommandDTO_ProblemDefinition::add_objectives() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.objectives)
  return _internal_add_objectives();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::PrototypeOutputParameter >&
StartOptimizationCommandDTO_ProblemDefinition::objectives() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.objectives)
  return objectives_;
}

// repeated .empowerops.volition.dto.BabelConstraint constraints = 3;
inline int StartOptimizationCommandDTO_ProblemDefinition::_internal_constraints_size() const {
  return constraints_.size();
}
inline int StartOptimizationCommandDTO_ProblemDefinition::constraints_size() const {
  return _internal_constraints_size();
}
inline void StartOptimizationCommandDTO_ProblemDefinition::clear_constraints() {
  constraints_.Clear();
}
inline ::empowerops::volition::dto::BabelConstraint* StartOptimizationCommandDTO_ProblemDefinition::mutable_constraints(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.constraints)
  return constraints_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelConstraint >*
StartOptimizationCommandDTO_ProblemDefinition::mutable_constraints() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.constraints)
  return &constraints_;
}
inline const ::empowerops::volition::dto::BabelConstraint& StartOptimizationCommandDTO_ProblemDefinition::_internal_constraints(int index) const {
  return constraints_.Get(index);
}
inline const ::empowerops::volition::dto::BabelConstraint& StartOptimizationCommandDTO_ProblemDefinition::constraints(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.constraints)
  return _internal_constraints(index);
}
inline ::empowerops::volition::dto::BabelConstraint* StartOptimizationCommandDTO_ProblemDefinition::_internal_add_constraints() {
  return constraints_.Add();
}
inline ::empowerops::volition::dto::BabelConstraint* StartOptimizationCommandDTO_ProblemDefinition::add_constraints() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.constraints)
  return _internal_add_constraints();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::BabelConstraint >&
StartOptimizationCommandDTO_ProblemDefinition::constraints() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition.constraints)
  return constraints_;
}

// -------------------------------------------------------------------

// StartOptimizationCommandDTO_SimulationNode

// string name = 1;
inline void StartOptimizationCommandDTO_SimulationNode::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& StartOptimizationCommandDTO_SimulationNode::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
  return _internal_name();
}
inline void StartOptimizationCommandDTO_SimulationNode::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
  return _internal_mutable_name();
}
inline const std::string& StartOptimizationCommandDTO_SimulationNode::_internal_name() const {
  return name_.Get();
}
inline void StartOptimizationCommandDTO_SimulationNode::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StartOptimizationCommandDTO_SimulationNode::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
}
inline void StartOptimizationCommandDTO_SimulationNode::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
}
inline void StartOptimizationCommandDTO_SimulationNode::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StartOptimizationCommandDTO_SimulationNode::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.name)
}

// bool auto_map = 2;
inline bool StartOptimizationCommandDTO_SimulationNode::_internal_has_auto_map() const {
  return mapping_case() == kAutoMap;
}
inline void StartOptimizationCommandDTO_SimulationNode::set_has_auto_map() {
  _oneof_case_[0] = kAutoMap;
}
inline void StartOptimizationCommandDTO_SimulationNode::clear_auto_map() {
  if (_internal_has_auto_map()) {
    mapping_.auto_map_ = false;
    clear_has_mapping();
  }
}
inline bool StartOptimizationCommandDTO_SimulationNode::_internal_auto_map() const {
  if (_internal_has_auto_map()) {
    return mapping_.auto_map_;
  }
  return false;
}
inline void StartOptimizationCommandDTO_SimulationNode::_internal_set_auto_map(bool value) {
  if (!_internal_has_auto_map()) {
    clear_mapping();
    set_has_auto_map();
  }
  mapping_.auto_map_ = value;
}
inline bool StartOptimizationCommandDTO_SimulationNode::auto_map() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.auto_map)
  return _internal_auto_map();
}
inline void StartOptimizationCommandDTO_SimulationNode::set_auto_map(bool value) {
  _internal_set_auto_map(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.auto_map)
}

// .empowerops.volition.dto.VariableMapping mapping_table = 3;
inline bool StartOptimizationCommandDTO_SimulationNode::_internal_has_mapping_table() const {
  return mapping_case() == kMappingTable;
}
inline bool StartOptimizationCommandDTO_SimulationNode::has_mapping_table() const {
  return _internal_has_mapping_table();
}
inline void StartOptimizationCommandDTO_SimulationNode::set_has_mapping_table() {
  _oneof_case_[0] = kMappingTable;
}
inline void StartOptimizationCommandDTO_SimulationNode::clear_mapping_table() {
  if (_internal_has_mapping_table()) {
    if (GetArena() == nullptr) {
      delete mapping_.mapping_table_;
    }
    clear_has_mapping();
  }
}
inline ::empowerops::volition::dto::VariableMapping* StartOptimizationCommandDTO_SimulationNode::release_mapping_table() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.mapping_table)
  if (_internal_has_mapping_table()) {
    clear_has_mapping();
      ::empowerops::volition::dto::VariableMapping* temp = mapping_.mapping_table_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mapping_.mapping_table_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::VariableMapping& StartOptimizationCommandDTO_SimulationNode::_internal_mapping_table() const {
  return _internal_has_mapping_table()
      ? *mapping_.mapping_table_
      : reinterpret_cast< ::empowerops::volition::dto::VariableMapping&>(::empowerops::volition::dto::_VariableMapping_default_instance_);
}
inline const ::empowerops::volition::dto::VariableMapping& StartOptimizationCommandDTO_SimulationNode::mapping_table() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.mapping_table)
  return _internal_mapping_table();
}
inline ::empowerops::volition::dto::VariableMapping* StartOptimizationCommandDTO_SimulationNode::unsafe_arena_release_mapping_table() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.mapping_table)
  if (_internal_has_mapping_table()) {
    clear_has_mapping();
    ::empowerops::volition::dto::VariableMapping* temp = mapping_.mapping_table_;
    mapping_.mapping_table_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StartOptimizationCommandDTO_SimulationNode::unsafe_arena_set_allocated_mapping_table(::empowerops::volition::dto::VariableMapping* mapping_table) {
  clear_mapping();
  if (mapping_table) {
    set_has_mapping_table();
    mapping_.mapping_table_ = mapping_table;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.mapping_table)
}
inline ::empowerops::volition::dto::VariableMapping* StartOptimizationCommandDTO_SimulationNode::_internal_mutable_mapping_table() {
  if (!_internal_has_mapping_table()) {
    clear_mapping();
    set_has_mapping_table();
    mapping_.mapping_table_ = CreateMaybeMessage< ::empowerops::volition::dto::VariableMapping >(GetArena());
  }
  return mapping_.mapping_table_;
}
inline ::empowerops::volition::dto::VariableMapping* StartOptimizationCommandDTO_SimulationNode::mutable_mapping_table() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.mapping_table)
  return _internal_mutable_mapping_table();
}

// repeated string inputs = 4;
inline int StartOptimizationCommandDTO_SimulationNode::_internal_inputs_size() const {
  return inputs_.size();
}
inline int StartOptimizationCommandDTO_SimulationNode::inputs_size() const {
  return _internal_inputs_size();
}
inline void StartOptimizationCommandDTO_SimulationNode::clear_inputs() {
  inputs_.Clear();
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::add_inputs() {
  // @@protoc_insertion_point(field_add_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  return _internal_add_inputs();
}
inline const std::string& StartOptimizationCommandDTO_SimulationNode::_internal_inputs(int index) const {
  return inputs_.Get(index);
}
inline const std::string& StartOptimizationCommandDTO_SimulationNode::inputs(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  return _internal_inputs(index);
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  return inputs_.Mutable(index);
}
inline void StartOptimizationCommandDTO_SimulationNode::set_inputs(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  inputs_.Mutable(index)->assign(value);
}
inline void StartOptimizationCommandDTO_SimulationNode::set_inputs(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  inputs_.Mutable(index)->assign(std::move(value));
}
inline void StartOptimizationCommandDTO_SimulationNode::set_inputs(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  inputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::set_inputs(int index, const char* value, size_t size) {
  inputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::_internal_add_inputs() {
  return inputs_.Add();
}
inline void StartOptimizationCommandDTO_SimulationNode::add_inputs(const std::string& value) {
  inputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::add_inputs(std::string&& value) {
  inputs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::add_inputs(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  inputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::add_inputs(const char* value, size_t size) {
  inputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StartOptimizationCommandDTO_SimulationNode::inputs() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  return inputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StartOptimizationCommandDTO_SimulationNode::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.inputs)
  return &inputs_;
}

// repeated string outputs = 5;
inline int StartOptimizationCommandDTO_SimulationNode::_internal_outputs_size() const {
  return outputs_.size();
}
inline int StartOptimizationCommandDTO_SimulationNode::outputs_size() const {
  return _internal_outputs_size();
}
inline void StartOptimizationCommandDTO_SimulationNode::clear_outputs() {
  outputs_.Clear();
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::add_outputs() {
  // @@protoc_insertion_point(field_add_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  return _internal_add_outputs();
}
inline const std::string& StartOptimizationCommandDTO_SimulationNode::_internal_outputs(int index) const {
  return outputs_.Get(index);
}
inline const std::string& StartOptimizationCommandDTO_SimulationNode::outputs(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  return _internal_outputs(index);
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  return outputs_.Mutable(index);
}
inline void StartOptimizationCommandDTO_SimulationNode::set_outputs(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  outputs_.Mutable(index)->assign(value);
}
inline void StartOptimizationCommandDTO_SimulationNode::set_outputs(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  outputs_.Mutable(index)->assign(std::move(value));
}
inline void StartOptimizationCommandDTO_SimulationNode::set_outputs(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  outputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::set_outputs(int index, const char* value, size_t size) {
  outputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
}
inline std::string* StartOptimizationCommandDTO_SimulationNode::_internal_add_outputs() {
  return outputs_.Add();
}
inline void StartOptimizationCommandDTO_SimulationNode::add_outputs(const std::string& value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::add_outputs(std::string&& value) {
  outputs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::add_outputs(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
}
inline void StartOptimizationCommandDTO_SimulationNode::add_outputs(const char* value, size_t size) {
  outputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StartOptimizationCommandDTO_SimulationNode::outputs() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  return outputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StartOptimizationCommandDTO_SimulationNode::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.outputs)
  return &outputs_;
}

// .google.protobuf.Duration time_out = 6;
inline bool StartOptimizationCommandDTO_SimulationNode::_internal_has_time_out() const {
  return this != internal_default_instance() && time_out_ != nullptr;
}
inline bool StartOptimizationCommandDTO_SimulationNode::has_time_out() const {
  return _internal_has_time_out();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& StartOptimizationCommandDTO_SimulationNode::_internal_time_out() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = time_out_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& StartOptimizationCommandDTO_SimulationNode::time_out() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.time_out)
  return _internal_time_out();
}
inline void StartOptimizationCommandDTO_SimulationNode::unsafe_arena_set_allocated_time_out(
    PROTOBUF_NAMESPACE_ID::Duration* time_out) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_out_);
  }
  time_out_ = time_out;
  if (time_out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.time_out)
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_SimulationNode::release_time_out() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = time_out_;
  time_out_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_SimulationNode::unsafe_arena_release_time_out() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.time_out)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = time_out_;
  time_out_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_SimulationNode::_internal_mutable_time_out() {
  
  if (time_out_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    time_out_ = p;
  }
  return time_out_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_SimulationNode::mutable_time_out() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.time_out)
  return _internal_mutable_time_out();
}
inline void StartOptimizationCommandDTO_SimulationNode::set_allocated_time_out(PROTOBUF_NAMESPACE_ID::Duration* time_out) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_out_);
  }
  if (time_out) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_out)->GetArena();
    if (message_arena != submessage_arena) {
      time_out = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_out, submessage_arena);
    }
    
  } else {
    
  }
  time_out_ = time_out;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode.time_out)
}

inline bool StartOptimizationCommandDTO_SimulationNode::has_mapping() const {
  return mapping_case() != MAPPING_NOT_SET;
}
inline void StartOptimizationCommandDTO_SimulationNode::clear_has_mapping() {
  _oneof_case_[0] = MAPPING_NOT_SET;
}
inline StartOptimizationCommandDTO_SimulationNode::MappingCase StartOptimizationCommandDTO_SimulationNode::mapping_case() const {
  return StartOptimizationCommandDTO_SimulationNode::MappingCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StartOptimizationCommandDTO_OptimizationSettings

// .google.protobuf.Duration run_time = 11;
inline bool StartOptimizationCommandDTO_OptimizationSettings::_internal_has_run_time() const {
  return this != internal_default_instance() && run_time_ != nullptr;
}
inline bool StartOptimizationCommandDTO_OptimizationSettings::has_run_time() const {
  return _internal_has_run_time();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& StartOptimizationCommandDTO_OptimizationSettings::_internal_run_time() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = run_time_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& StartOptimizationCommandDTO_OptimizationSettings::run_time() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.run_time)
  return _internal_run_time();
}
inline void StartOptimizationCommandDTO_OptimizationSettings::unsafe_arena_set_allocated_run_time(
    PROTOBUF_NAMESPACE_ID::Duration* run_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_time_);
  }
  run_time_ = run_time;
  if (run_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.run_time)
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_OptimizationSettings::release_run_time() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = run_time_;
  run_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_OptimizationSettings::unsafe_arena_release_run_time() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.run_time)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = run_time_;
  run_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_OptimizationSettings::_internal_mutable_run_time() {
  
  if (run_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    run_time_ = p;
  }
  return run_time_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* StartOptimizationCommandDTO_OptimizationSettings::mutable_run_time() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.run_time)
  return _internal_mutable_run_time();
}
inline void StartOptimizationCommandDTO_OptimizationSettings::set_allocated_run_time(PROTOBUF_NAMESPACE_ID::Duration* run_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_time_);
  }
  if (run_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_time)->GetArena();
    if (message_arena != submessage_arena) {
      run_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_time, submessage_arena);
    }
    
  } else {
    
  }
  run_time_ = run_time;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.run_time)
}

// .google.protobuf.UInt32Value iteration_count = 12;
inline bool StartOptimizationCommandDTO_OptimizationSettings::_internal_has_iteration_count() const {
  return this != internal_default_instance() && iteration_count_ != nullptr;
}
inline bool StartOptimizationCommandDTO_OptimizationSettings::has_iteration_count() const {
  return _internal_has_iteration_count();
}
inline const PROTOBUF_NAMESPACE_ID::UInt32Value& StartOptimizationCommandDTO_OptimizationSettings::_internal_iteration_count() const {
  const PROTOBUF_NAMESPACE_ID::UInt32Value* p = iteration_count_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::UInt32Value&>(
      PROTOBUF_NAMESPACE_ID::_UInt32Value_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::UInt32Value& StartOptimizationCommandDTO_OptimizationSettings::iteration_count() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.iteration_count)
  return _internal_iteration_count();
}
inline void StartOptimizationCommandDTO_OptimizationSettings::unsafe_arena_set_allocated_iteration_count(
    PROTOBUF_NAMESPACE_ID::UInt32Value* iteration_count) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(iteration_count_);
  }
  iteration_count_ = iteration_count;
  if (iteration_count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.iteration_count)
}
inline PROTOBUF_NAMESPACE_ID::UInt32Value* StartOptimizationCommandDTO_OptimizationSettings::release_iteration_count() {
  
  PROTOBUF_NAMESPACE_ID::UInt32Value* temp = iteration_count_;
  iteration_count_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::UInt32Value* StartOptimizationCommandDTO_OptimizationSettings::unsafe_arena_release_iteration_count() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.iteration_count)
  
  PROTOBUF_NAMESPACE_ID::UInt32Value* temp = iteration_count_;
  iteration_count_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::UInt32Value* StartOptimizationCommandDTO_OptimizationSettings::_internal_mutable_iteration_count() {
  
  if (iteration_count_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::UInt32Value>(GetArena());
    iteration_count_ = p;
  }
  return iteration_count_;
}
inline PROTOBUF_NAMESPACE_ID::UInt32Value* StartOptimizationCommandDTO_OptimizationSettings::mutable_iteration_count() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.iteration_count)
  return _internal_mutable_iteration_count();
}
inline void StartOptimizationCommandDTO_OptimizationSettings::set_allocated_iteration_count(PROTOBUF_NAMESPACE_ID::UInt32Value* iteration_count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(iteration_count_);
  }
  if (iteration_count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(iteration_count)->GetArena();
    if (message_arena != submessage_arena) {
      iteration_count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, iteration_count, submessage_arena);
    }
    
  } else {
    
  }
  iteration_count_ = iteration_count;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.iteration_count)
}

// .google.protobuf.DoubleValue target_objective_value = 13;
inline bool StartOptimizationCommandDTO_OptimizationSettings::_internal_has_target_objective_value() const {
  return this != internal_default_instance() && target_objective_value_ != nullptr;
}
inline bool StartOptimizationCommandDTO_OptimizationSettings::has_target_objective_value() const {
  return _internal_has_target_objective_value();
}
inline const PROTOBUF_NAMESPACE_ID::DoubleValue& StartOptimizationCommandDTO_OptimizationSettings::_internal_target_objective_value() const {
  const PROTOBUF_NAMESPACE_ID::DoubleValue* p = target_objective_value_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::DoubleValue& StartOptimizationCommandDTO_OptimizationSettings::target_objective_value() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.target_objective_value)
  return _internal_target_objective_value();
}
inline void StartOptimizationCommandDTO_OptimizationSettings::unsafe_arena_set_allocated_target_objective_value(
    PROTOBUF_NAMESPACE_ID::DoubleValue* target_objective_value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_objective_value_);
  }
  target_objective_value_ = target_objective_value;
  if (target_objective_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.target_objective_value)
}
inline PROTOBUF_NAMESPACE_ID::DoubleValue* StartOptimizationCommandDTO_OptimizationSettings::release_target_objective_value() {
  
  PROTOBUF_NAMESPACE_ID::DoubleValue* temp = target_objective_value_;
  target_objective_value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::DoubleValue* StartOptimizationCommandDTO_OptimizationSettings::unsafe_arena_release_target_objective_value() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.target_objective_value)
  
  PROTOBUF_NAMESPACE_ID::DoubleValue* temp = target_objective_value_;
  target_objective_value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::DoubleValue* StartOptimizationCommandDTO_OptimizationSettings::_internal_mutable_target_objective_value() {
  
  if (target_objective_value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArena());
    target_objective_value_ = p;
  }
  return target_objective_value_;
}
inline PROTOBUF_NAMESPACE_ID::DoubleValue* StartOptimizationCommandDTO_OptimizationSettings::mutable_target_objective_value() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.target_objective_value)
  return _internal_mutable_target_objective_value();
}
inline void StartOptimizationCommandDTO_OptimizationSettings::set_allocated_target_objective_value(PROTOBUF_NAMESPACE_ID::DoubleValue* target_objective_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_objective_value_);
  }
  if (target_objective_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_objective_value)->GetArena();
    if (message_arena != submessage_arena) {
      target_objective_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_objective_value, submessage_arena);
    }
    
  } else {
    
  }
  target_objective_value_ = target_objective_value;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings.target_objective_value)
}

// -------------------------------------------------------------------

// StartOptimizationCommandDTO

// .empowerops.volition.dto.StartOptimizationCommandDTO.ProblemDefinition problem_definition = 1;
inline bool StartOptimizationCommandDTO::_internal_has_problem_definition() const {
  return this != internal_default_instance() && problem_definition_ != nullptr;
}
inline bool StartOptimizationCommandDTO::has_problem_definition() const {
  return _internal_has_problem_definition();
}
inline void StartOptimizationCommandDTO::clear_problem_definition() {
  if (GetArena() == nullptr && problem_definition_ != nullptr) {
    delete problem_definition_;
  }
  problem_definition_ = nullptr;
}
inline const ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition& StartOptimizationCommandDTO::_internal_problem_definition() const {
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* p = problem_definition_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition&>(
      ::empowerops::volition::dto::_StartOptimizationCommandDTO_ProblemDefinition_default_instance_);
}
inline const ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition& StartOptimizationCommandDTO::problem_definition() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.problem_definition)
  return _internal_problem_definition();
}
inline void StartOptimizationCommandDTO::unsafe_arena_set_allocated_problem_definition(
    ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* problem_definition) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(problem_definition_);
  }
  problem_definition_ = problem_definition;
  if (problem_definition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.problem_definition)
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* StartOptimizationCommandDTO::release_problem_definition() {
  
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* temp = problem_definition_;
  problem_definition_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* StartOptimizationCommandDTO::unsafe_arena_release_problem_definition() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.problem_definition)
  
  ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* temp = problem_definition_;
  problem_definition_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* StartOptimizationCommandDTO::_internal_mutable_problem_definition() {
  
  if (problem_definition_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition>(GetArena());
    problem_definition_ = p;
  }
  return problem_definition_;
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* StartOptimizationCommandDTO::mutable_problem_definition() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.problem_definition)
  return _internal_mutable_problem_definition();
}
inline void StartOptimizationCommandDTO::set_allocated_problem_definition(::empowerops::volition::dto::StartOptimizationCommandDTO_ProblemDefinition* problem_definition) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete problem_definition_;
  }
  if (problem_definition) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(problem_definition);
    if (message_arena != submessage_arena) {
      problem_definition = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, problem_definition, submessage_arena);
    }
    
  } else {
    
  }
  problem_definition_ = problem_definition;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.problem_definition)
}

// repeated .empowerops.volition.dto.StartOptimizationCommandDTO.SimulationNode nodes = 2;
inline int StartOptimizationCommandDTO::_internal_nodes_size() const {
  return nodes_.size();
}
inline int StartOptimizationCommandDTO::nodes_size() const {
  return _internal_nodes_size();
}
inline void StartOptimizationCommandDTO::clear_nodes() {
  nodes_.Clear();
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* StartOptimizationCommandDTO::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.nodes)
  return nodes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode >*
StartOptimizationCommandDTO::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.nodes)
  return &nodes_;
}
inline const ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode& StartOptimizationCommandDTO::_internal_nodes(int index) const {
  return nodes_.Get(index);
}
inline const ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode& StartOptimizationCommandDTO::nodes(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.nodes)
  return _internal_nodes(index);
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* StartOptimizationCommandDTO::_internal_add_nodes() {
  return nodes_.Add();
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode* StartOptimizationCommandDTO::add_nodes() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.nodes)
  return _internal_add_nodes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::StartOptimizationCommandDTO_SimulationNode >&
StartOptimizationCommandDTO::nodes() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.nodes)
  return nodes_;
}

// .empowerops.volition.dto.StartOptimizationCommandDTO.OptimizationSettings settings = 3;
inline bool StartOptimizationCommandDTO::_internal_has_settings() const {
  return this != internal_default_instance() && settings_ != nullptr;
}
inline bool StartOptimizationCommandDTO::has_settings() const {
  return _internal_has_settings();
}
inline void StartOptimizationCommandDTO::clear_settings() {
  if (GetArena() == nullptr && settings_ != nullptr) {
    delete settings_;
  }
  settings_ = nullptr;
}
inline const ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings& StartOptimizationCommandDTO::_internal_settings() const {
  const ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* p = settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings&>(
      ::empowerops::volition::dto::_StartOptimizationCommandDTO_OptimizationSettings_default_instance_);
}
inline const ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings& StartOptimizationCommandDTO::settings() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.settings)
  return _internal_settings();
}
inline void StartOptimizationCommandDTO::unsafe_arena_set_allocated_settings(
    ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* settings) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settings_);
  }
  settings_ = settings;
  if (settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.settings)
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* StartOptimizationCommandDTO::release_settings() {
  
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* temp = settings_;
  settings_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* StartOptimizationCommandDTO::unsafe_arena_release_settings() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StartOptimizationCommandDTO.settings)
  
  ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* StartOptimizationCommandDTO::_internal_mutable_settings() {
  
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings>(GetArena());
    settings_ = p;
  }
  return settings_;
}
inline ::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* StartOptimizationCommandDTO::mutable_settings() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.settings)
  return _internal_mutable_settings();
}
inline void StartOptimizationCommandDTO::set_allocated_settings(::empowerops::volition::dto::StartOptimizationCommandDTO_OptimizationSettings* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(settings);
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    
  } else {
    
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StartOptimizationCommandDTO.settings)
}

// repeated .empowerops.volition.dto.DesignRow seed_points = 4;
inline int StartOptimizationCommandDTO::_internal_seed_points_size() const {
  return seed_points_.size();
}
inline int StartOptimizationCommandDTO::seed_points_size() const {
  return _internal_seed_points_size();
}
inline void StartOptimizationCommandDTO::clear_seed_points() {
  seed_points_.Clear();
}
inline ::empowerops::volition::dto::DesignRow* StartOptimizationCommandDTO::mutable_seed_points(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StartOptimizationCommandDTO.seed_points)
  return seed_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >*
StartOptimizationCommandDTO::mutable_seed_points() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.StartOptimizationCommandDTO.seed_points)
  return &seed_points_;
}
inline const ::empowerops::volition::dto::DesignRow& StartOptimizationCommandDTO::_internal_seed_points(int index) const {
  return seed_points_.Get(index);
}
inline const ::empowerops::volition::dto::DesignRow& StartOptimizationCommandDTO::seed_points(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StartOptimizationCommandDTO.seed_points)
  return _internal_seed_points(index);
}
inline ::empowerops::volition::dto::DesignRow* StartOptimizationCommandDTO::_internal_add_seed_points() {
  return seed_points_.Add();
}
inline ::empowerops::volition::dto::DesignRow* StartOptimizationCommandDTO::add_seed_points() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.StartOptimizationCommandDTO.seed_points)
  return _internal_add_seed_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >&
StartOptimizationCommandDTO::seed_points() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.StartOptimizationCommandDTO.seed_points)
  return seed_points_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OptimizerGeneratedQueryDTO_SimulationEvaluationRequest

// string name = 1;
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
  return _internal_name();
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
}
inline std::string* OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
  return _internal_mutable_name();
}
inline const std::string& OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::_internal_name() const {
  return name_.Get();
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
}
inline std::string* OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.name)
}

// map<string, double> input_vector = 2;
inline int OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::_internal_input_vector_size() const {
  return input_vector_.size();
}
inline int OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::input_vector_size() const {
  return _internal_input_vector_size();
}
inline void OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::clear_input_vector() {
  input_vector_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::_internal_input_vector() const {
  return input_vector_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::input_vector() const {
  // @@protoc_insertion_point(field_map:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.input_vector)
  return _internal_input_vector();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::_internal_mutable_input_vector() {
  return input_vector_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
OptimizerGeneratedQueryDTO_SimulationEvaluationRequest::mutable_input_vector() {
  // @@protoc_insertion_point(field_mutable_map:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest.input_vector)
  return _internal_mutable_input_vector();
}

// -------------------------------------------------------------------

// OptimizerGeneratedQueryDTO_SimulationCancelRequest

// string name = 1;
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& OptimizerGeneratedQueryDTO_SimulationCancelRequest::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
  return _internal_name();
}
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
}
inline std::string* OptimizerGeneratedQueryDTO_SimulationCancelRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
  return _internal_mutable_name();
}
inline const std::string& OptimizerGeneratedQueryDTO_SimulationCancelRequest::_internal_name() const {
  return name_.Get();
}
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
}
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
}
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
}
inline std::string* OptimizerGeneratedQueryDTO_SimulationCancelRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OptimizerGeneratedQueryDTO_SimulationCancelRequest::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OptimizerGeneratedQueryDTO_SimulationCancelRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest.name)
}

// -------------------------------------------------------------------

// OptimizerGeneratedQueryDTO_OptimizationStartedNotification

// .empowerops.volition.dto.UUID run_ID = 1;
inline bool OptimizerGeneratedQueryDTO_OptimizationStartedNotification::_internal_has_run_id() const {
  return this != internal_default_instance() && run_id_ != nullptr;
}
inline bool OptimizerGeneratedQueryDTO_OptimizationStartedNotification::has_run_id() const {
  return _internal_has_run_id();
}
inline void OptimizerGeneratedQueryDTO_OptimizationStartedNotification::clear_run_id() {
  if (GetArena() == nullptr && run_id_ != nullptr) {
    delete run_id_;
  }
  run_id_ = nullptr;
}
inline const ::empowerops::volition::dto::UUID& OptimizerGeneratedQueryDTO_OptimizationStartedNotification::_internal_run_id() const {
  const ::empowerops::volition::dto::UUID* p = run_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::UUID&>(
      ::empowerops::volition::dto::_UUID_default_instance_);
}
inline const ::empowerops::volition::dto::UUID& OptimizerGeneratedQueryDTO_OptimizationStartedNotification::run_id() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification.run_ID)
  return _internal_run_id();
}
inline void OptimizerGeneratedQueryDTO_OptimizationStartedNotification::unsafe_arena_set_allocated_run_id(
    ::empowerops::volition::dto::UUID* run_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_id_);
  }
  run_id_ = run_id;
  if (run_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification.run_ID)
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationStartedNotification::release_run_id() {
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationStartedNotification::unsafe_arena_release_run_id() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification.run_ID)
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationStartedNotification::_internal_mutable_run_id() {
  
  if (run_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::UUID>(GetArena());
    run_id_ = p;
  }
  return run_id_;
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationStartedNotification::mutable_run_id() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification.run_ID)
  return _internal_mutable_run_id();
}
inline void OptimizerGeneratedQueryDTO_OptimizationStartedNotification::set_allocated_run_id(::empowerops::volition::dto::UUID* run_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete run_id_;
  }
  if (run_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(run_id);
    if (message_arena != submessage_arena) {
      run_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_id, submessage_arena);
    }
    
  } else {
    
  }
  run_id_ = run_id;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification.run_ID)
}

// -------------------------------------------------------------------

// OptimizerGeneratedQueryDTO_OptimizationFinishedNotification

// .empowerops.volition.dto.UUID run_ID = 1;
inline bool OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::_internal_has_run_id() const {
  return this != internal_default_instance() && run_id_ != nullptr;
}
inline bool OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::has_run_id() const {
  return _internal_has_run_id();
}
inline void OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::clear_run_id() {
  if (GetArena() == nullptr && run_id_ != nullptr) {
    delete run_id_;
  }
  run_id_ = nullptr;
}
inline const ::empowerops::volition::dto::UUID& OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::_internal_run_id() const {
  const ::empowerops::volition::dto::UUID* p = run_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::UUID&>(
      ::empowerops::volition::dto::_UUID_default_instance_);
}
inline const ::empowerops::volition::dto::UUID& OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::run_id() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification.run_ID)
  return _internal_run_id();
}
inline void OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::unsafe_arena_set_allocated_run_id(
    ::empowerops::volition::dto::UUID* run_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_id_);
  }
  run_id_ = run_id;
  if (run_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification.run_ID)
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::release_run_id() {
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::unsafe_arena_release_run_id() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification.run_ID)
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::_internal_mutable_run_id() {
  
  if (run_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::UUID>(GetArena());
    run_id_ = p;
  }
  return run_id_;
}
inline ::empowerops::volition::dto::UUID* OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::mutable_run_id() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification.run_ID)
  return _internal_mutable_run_id();
}
inline void OptimizerGeneratedQueryDTO_OptimizationFinishedNotification::set_allocated_run_id(::empowerops::volition::dto::UUID* run_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete run_id_;
  }
  if (run_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(run_id);
    if (message_arena != submessage_arena) {
      run_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_id, submessage_arena);
    }
    
  } else {
    
  }
  run_id_ = run_id;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification.run_ID)
}

// -------------------------------------------------------------------

// OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification

// repeated string issues = 1;
inline int OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::_internal_issues_size() const {
  return issues_.size();
}
inline int OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::issues_size() const {
  return _internal_issues_size();
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::clear_issues() {
  issues_.Clear();
}
inline std::string* OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::add_issues() {
  // @@protoc_insertion_point(field_add_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  return _internal_add_issues();
}
inline const std::string& OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::_internal_issues(int index) const {
  return issues_.Get(index);
}
inline const std::string& OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::issues(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  return _internal_issues(index);
}
inline std::string* OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::mutable_issues(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  return issues_.Mutable(index);
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::set_issues(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  issues_.Mutable(index)->assign(value);
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::set_issues(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  issues_.Mutable(index)->assign(std::move(value));
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::set_issues(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  issues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::set_issues(int index, const char* value, size_t size) {
  issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
}
inline std::string* OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::_internal_add_issues() {
  return issues_.Add();
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::add_issues(const std::string& value) {
  issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::add_issues(std::string&& value) {
  issues_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::add_issues(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
}
inline void OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::add_issues(const char* value, size_t size) {
  issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::issues() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  return issues_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification::mutable_issues() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification.issues)
  return &issues_;
}

// -------------------------------------------------------------------

// OptimizerGeneratedQueryDTO

// .empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationEvaluationRequest evaluation_request = 1;
inline bool OptimizerGeneratedQueryDTO::_internal_has_evaluation_request() const {
  return purpose_case() == kEvaluationRequest;
}
inline bool OptimizerGeneratedQueryDTO::has_evaluation_request() const {
  return _internal_has_evaluation_request();
}
inline void OptimizerGeneratedQueryDTO::set_has_evaluation_request() {
  _oneof_case_[0] = kEvaluationRequest;
}
inline void OptimizerGeneratedQueryDTO::clear_evaluation_request() {
  if (_internal_has_evaluation_request()) {
    if (GetArena() == nullptr) {
      delete purpose_.evaluation_request_;
    }
    clear_has_purpose();
  }
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* OptimizerGeneratedQueryDTO::release_evaluation_request() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.evaluation_request)
  if (_internal_has_evaluation_request()) {
    clear_has_purpose();
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* temp = purpose_.evaluation_request_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    purpose_.evaluation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& OptimizerGeneratedQueryDTO::_internal_evaluation_request() const {
  return _internal_has_evaluation_request()
      ? *purpose_.evaluation_request_
      : reinterpret_cast< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest&>(::empowerops::volition::dto::_OptimizerGeneratedQueryDTO_SimulationEvaluationRequest_default_instance_);
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest& OptimizerGeneratedQueryDTO::evaluation_request() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.evaluation_request)
  return _internal_evaluation_request();
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* OptimizerGeneratedQueryDTO::unsafe_arena_release_evaluation_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.evaluation_request)
  if (_internal_has_evaluation_request()) {
    clear_has_purpose();
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* temp = purpose_.evaluation_request_;
    purpose_.evaluation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OptimizerGeneratedQueryDTO::unsafe_arena_set_allocated_evaluation_request(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* evaluation_request) {
  clear_purpose();
  if (evaluation_request) {
    set_has_evaluation_request();
    purpose_.evaluation_request_ = evaluation_request;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.evaluation_request)
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* OptimizerGeneratedQueryDTO::_internal_mutable_evaluation_request() {
  if (!_internal_has_evaluation_request()) {
    clear_purpose();
    set_has_evaluation_request();
    purpose_.evaluation_request_ = CreateMaybeMessage< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest >(GetArena());
  }
  return purpose_.evaluation_request_;
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationEvaluationRequest* OptimizerGeneratedQueryDTO::mutable_evaluation_request() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.evaluation_request)
  return _internal_mutable_evaluation_request();
}

// .empowerops.volition.dto.OptimizerGeneratedQueryDTO.SimulationCancelRequest cancel_request = 3;
inline bool OptimizerGeneratedQueryDTO::_internal_has_cancel_request() const {
  return purpose_case() == kCancelRequest;
}
inline bool OptimizerGeneratedQueryDTO::has_cancel_request() const {
  return _internal_has_cancel_request();
}
inline void OptimizerGeneratedQueryDTO::set_has_cancel_request() {
  _oneof_case_[0] = kCancelRequest;
}
inline void OptimizerGeneratedQueryDTO::clear_cancel_request() {
  if (_internal_has_cancel_request()) {
    if (GetArena() == nullptr) {
      delete purpose_.cancel_request_;
    }
    clear_has_purpose();
  }
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* OptimizerGeneratedQueryDTO::release_cancel_request() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.cancel_request)
  if (_internal_has_cancel_request()) {
    clear_has_purpose();
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* temp = purpose_.cancel_request_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    purpose_.cancel_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest& OptimizerGeneratedQueryDTO::_internal_cancel_request() const {
  return _internal_has_cancel_request()
      ? *purpose_.cancel_request_
      : reinterpret_cast< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest&>(::empowerops::volition::dto::_OptimizerGeneratedQueryDTO_SimulationCancelRequest_default_instance_);
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest& OptimizerGeneratedQueryDTO::cancel_request() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.cancel_request)
  return _internal_cancel_request();
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* OptimizerGeneratedQueryDTO::unsafe_arena_release_cancel_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.cancel_request)
  if (_internal_has_cancel_request()) {
    clear_has_purpose();
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* temp = purpose_.cancel_request_;
    purpose_.cancel_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OptimizerGeneratedQueryDTO::unsafe_arena_set_allocated_cancel_request(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* cancel_request) {
  clear_purpose();
  if (cancel_request) {
    set_has_cancel_request();
    purpose_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.cancel_request)
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* OptimizerGeneratedQueryDTO::_internal_mutable_cancel_request() {
  if (!_internal_has_cancel_request()) {
    clear_purpose();
    set_has_cancel_request();
    purpose_.cancel_request_ = CreateMaybeMessage< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest >(GetArena());
  }
  return purpose_.cancel_request_;
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_SimulationCancelRequest* OptimizerGeneratedQueryDTO::mutable_cancel_request() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.cancel_request)
  return _internal_mutable_cancel_request();
}

// .empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationStartedNotification optimization_started_notification = 5;
inline bool OptimizerGeneratedQueryDTO::_internal_has_optimization_started_notification() const {
  return purpose_case() == kOptimizationStartedNotification;
}
inline bool OptimizerGeneratedQueryDTO::has_optimization_started_notification() const {
  return _internal_has_optimization_started_notification();
}
inline void OptimizerGeneratedQueryDTO::set_has_optimization_started_notification() {
  _oneof_case_[0] = kOptimizationStartedNotification;
}
inline void OptimizerGeneratedQueryDTO::clear_optimization_started_notification() {
  if (_internal_has_optimization_started_notification()) {
    if (GetArena() == nullptr) {
      delete purpose_.optimization_started_notification_;
    }
    clear_has_purpose();
  }
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* OptimizerGeneratedQueryDTO::release_optimization_started_notification() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_started_notification)
  if (_internal_has_optimization_started_notification()) {
    clear_has_purpose();
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* temp = purpose_.optimization_started_notification_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    purpose_.optimization_started_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification& OptimizerGeneratedQueryDTO::_internal_optimization_started_notification() const {
  return _internal_has_optimization_started_notification()
      ? *purpose_.optimization_started_notification_
      : reinterpret_cast< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification&>(::empowerops::volition::dto::_OptimizerGeneratedQueryDTO_OptimizationStartedNotification_default_instance_);
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification& OptimizerGeneratedQueryDTO::optimization_started_notification() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_started_notification)
  return _internal_optimization_started_notification();
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* OptimizerGeneratedQueryDTO::unsafe_arena_release_optimization_started_notification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_started_notification)
  if (_internal_has_optimization_started_notification()) {
    clear_has_purpose();
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* temp = purpose_.optimization_started_notification_;
    purpose_.optimization_started_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OptimizerGeneratedQueryDTO::unsafe_arena_set_allocated_optimization_started_notification(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* optimization_started_notification) {
  clear_purpose();
  if (optimization_started_notification) {
    set_has_optimization_started_notification();
    purpose_.optimization_started_notification_ = optimization_started_notification;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_started_notification)
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* OptimizerGeneratedQueryDTO::_internal_mutable_optimization_started_notification() {
  if (!_internal_has_optimization_started_notification()) {
    clear_purpose();
    set_has_optimization_started_notification();
    purpose_.optimization_started_notification_ = CreateMaybeMessage< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification >(GetArena());
  }
  return purpose_.optimization_started_notification_;
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationStartedNotification* OptimizerGeneratedQueryDTO::mutable_optimization_started_notification() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_started_notification)
  return _internal_mutable_optimization_started_notification();
}

// .empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFinishedNotification optimization_finished_notification = 6;
inline bool OptimizerGeneratedQueryDTO::_internal_has_optimization_finished_notification() const {
  return purpose_case() == kOptimizationFinishedNotification;
}
inline bool OptimizerGeneratedQueryDTO::has_optimization_finished_notification() const {
  return _internal_has_optimization_finished_notification();
}
inline void OptimizerGeneratedQueryDTO::set_has_optimization_finished_notification() {
  _oneof_case_[0] = kOptimizationFinishedNotification;
}
inline void OptimizerGeneratedQueryDTO::clear_optimization_finished_notification() {
  if (_internal_has_optimization_finished_notification()) {
    if (GetArena() == nullptr) {
      delete purpose_.optimization_finished_notification_;
    }
    clear_has_purpose();
  }
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* OptimizerGeneratedQueryDTO::release_optimization_finished_notification() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_finished_notification)
  if (_internal_has_optimization_finished_notification()) {
    clear_has_purpose();
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* temp = purpose_.optimization_finished_notification_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    purpose_.optimization_finished_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& OptimizerGeneratedQueryDTO::_internal_optimization_finished_notification() const {
  return _internal_has_optimization_finished_notification()
      ? *purpose_.optimization_finished_notification_
      : reinterpret_cast< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification&>(::empowerops::volition::dto::_OptimizerGeneratedQueryDTO_OptimizationFinishedNotification_default_instance_);
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification& OptimizerGeneratedQueryDTO::optimization_finished_notification() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_finished_notification)
  return _internal_optimization_finished_notification();
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* OptimizerGeneratedQueryDTO::unsafe_arena_release_optimization_finished_notification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_finished_notification)
  if (_internal_has_optimization_finished_notification()) {
    clear_has_purpose();
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* temp = purpose_.optimization_finished_notification_;
    purpose_.optimization_finished_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OptimizerGeneratedQueryDTO::unsafe_arena_set_allocated_optimization_finished_notification(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* optimization_finished_notification) {
  clear_purpose();
  if (optimization_finished_notification) {
    set_has_optimization_finished_notification();
    purpose_.optimization_finished_notification_ = optimization_finished_notification;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_finished_notification)
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* OptimizerGeneratedQueryDTO::_internal_mutable_optimization_finished_notification() {
  if (!_internal_has_optimization_finished_notification()) {
    clear_purpose();
    set_has_optimization_finished_notification();
    purpose_.optimization_finished_notification_ = CreateMaybeMessage< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification >(GetArena());
  }
  return purpose_.optimization_finished_notification_;
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFinishedNotification* OptimizerGeneratedQueryDTO::mutable_optimization_finished_notification() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_finished_notification)
  return _internal_mutable_optimization_finished_notification();
}

// .empowerops.volition.dto.OptimizerGeneratedQueryDTO.OptimizationFailedToStartNotification optimization_not_started_notification = 7;
inline bool OptimizerGeneratedQueryDTO::_internal_has_optimization_not_started_notification() const {
  return purpose_case() == kOptimizationNotStartedNotification;
}
inline bool OptimizerGeneratedQueryDTO::has_optimization_not_started_notification() const {
  return _internal_has_optimization_not_started_notification();
}
inline void OptimizerGeneratedQueryDTO::set_has_optimization_not_started_notification() {
  _oneof_case_[0] = kOptimizationNotStartedNotification;
}
inline void OptimizerGeneratedQueryDTO::clear_optimization_not_started_notification() {
  if (_internal_has_optimization_not_started_notification()) {
    if (GetArena() == nullptr) {
      delete purpose_.optimization_not_started_notification_;
    }
    clear_has_purpose();
  }
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* OptimizerGeneratedQueryDTO::release_optimization_not_started_notification() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_not_started_notification)
  if (_internal_has_optimization_not_started_notification()) {
    clear_has_purpose();
      ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* temp = purpose_.optimization_not_started_notification_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    purpose_.optimization_not_started_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& OptimizerGeneratedQueryDTO::_internal_optimization_not_started_notification() const {
  return _internal_has_optimization_not_started_notification()
      ? *purpose_.optimization_not_started_notification_
      : reinterpret_cast< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification&>(::empowerops::volition::dto::_OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification_default_instance_);
}
inline const ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification& OptimizerGeneratedQueryDTO::optimization_not_started_notification() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_not_started_notification)
  return _internal_optimization_not_started_notification();
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* OptimizerGeneratedQueryDTO::unsafe_arena_release_optimization_not_started_notification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_not_started_notification)
  if (_internal_has_optimization_not_started_notification()) {
    clear_has_purpose();
    ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* temp = purpose_.optimization_not_started_notification_;
    purpose_.optimization_not_started_notification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OptimizerGeneratedQueryDTO::unsafe_arena_set_allocated_optimization_not_started_notification(::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* optimization_not_started_notification) {
  clear_purpose();
  if (optimization_not_started_notification) {
    set_has_optimization_not_started_notification();
    purpose_.optimization_not_started_notification_ = optimization_not_started_notification;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_not_started_notification)
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* OptimizerGeneratedQueryDTO::_internal_mutable_optimization_not_started_notification() {
  if (!_internal_has_optimization_not_started_notification()) {
    clear_purpose();
    set_has_optimization_not_started_notification();
    purpose_.optimization_not_started_notification_ = CreateMaybeMessage< ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification >(GetArena());
  }
  return purpose_.optimization_not_started_notification_;
}
inline ::empowerops::volition::dto::OptimizerGeneratedQueryDTO_OptimizationFailedToStartNotification* OptimizerGeneratedQueryDTO::mutable_optimization_not_started_notification() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizerGeneratedQueryDTO.optimization_not_started_notification)
  return _internal_mutable_optimization_not_started_notification();
}

inline bool OptimizerGeneratedQueryDTO::has_purpose() const {
  return purpose_case() != PURPOSE_NOT_SET;
}
inline void OptimizerGeneratedQueryDTO::clear_has_purpose() {
  _oneof_case_[0] = PURPOSE_NOT_SET;
}
inline OptimizerGeneratedQueryDTO::PurposeCase OptimizerGeneratedQueryDTO::purpose_case() const {
  return OptimizerGeneratedQueryDTO::PurposeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SimulationEvaluationCompletedResponseDTO

// string name = 1;
inline void SimulationEvaluationCompletedResponseDTO::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& SimulationEvaluationCompletedResponseDTO::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
  return _internal_name();
}
inline void SimulationEvaluationCompletedResponseDTO::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
}
inline std::string* SimulationEvaluationCompletedResponseDTO::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
  return _internal_mutable_name();
}
inline const std::string& SimulationEvaluationCompletedResponseDTO::_internal_name() const {
  return name_.Get();
}
inline void SimulationEvaluationCompletedResponseDTO::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulationEvaluationCompletedResponseDTO::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
}
inline void SimulationEvaluationCompletedResponseDTO::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
}
inline void SimulationEvaluationCompletedResponseDTO::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
}
inline std::string* SimulationEvaluationCompletedResponseDTO::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulationEvaluationCompletedResponseDTO::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulationEvaluationCompletedResponseDTO::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.name)
}

// map<string, double> output_vector = 2;
inline int SimulationEvaluationCompletedResponseDTO::_internal_output_vector_size() const {
  return output_vector_.size();
}
inline int SimulationEvaluationCompletedResponseDTO::output_vector_size() const {
  return _internal_output_vector_size();
}
inline void SimulationEvaluationCompletedResponseDTO::clear_output_vector() {
  output_vector_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
SimulationEvaluationCompletedResponseDTO::_internal_output_vector() const {
  return output_vector_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
SimulationEvaluationCompletedResponseDTO::output_vector() const {
  // @@protoc_insertion_point(field_map:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.output_vector)
  return _internal_output_vector();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
SimulationEvaluationCompletedResponseDTO::_internal_mutable_output_vector() {
  return output_vector_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
SimulationEvaluationCompletedResponseDTO::mutable_output_vector() {
  // @@protoc_insertion_point(field_mutable_map:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.output_vector)
  return _internal_mutable_output_vector();
}

// bool abort_optimization = 3;
inline void SimulationEvaluationCompletedResponseDTO::clear_abort_optimization() {
  abort_optimization_ = false;
}
inline bool SimulationEvaluationCompletedResponseDTO::_internal_abort_optimization() const {
  return abort_optimization_;
}
inline bool SimulationEvaluationCompletedResponseDTO::abort_optimization() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.abort_optimization)
  return _internal_abort_optimization();
}
inline void SimulationEvaluationCompletedResponseDTO::_internal_set_abort_optimization(bool value) {
  
  abort_optimization_ = value;
}
inline void SimulationEvaluationCompletedResponseDTO::set_abort_optimization(bool value) {
  _internal_set_abort_optimization(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.SimulationEvaluationCompletedResponseDTO.abort_optimization)
}

// -------------------------------------------------------------------

// SimulationEvaluationResultConfirmDTO

// -------------------------------------------------------------------

// SimulationEvaluationErrorResponseDTO

// string name = 1;
inline void SimulationEvaluationErrorResponseDTO::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& SimulationEvaluationErrorResponseDTO::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
  return _internal_name();
}
inline void SimulationEvaluationErrorResponseDTO::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
}
inline std::string* SimulationEvaluationErrorResponseDTO::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
  return _internal_mutable_name();
}
inline const std::string& SimulationEvaluationErrorResponseDTO::_internal_name() const {
  return name_.Get();
}
inline void SimulationEvaluationErrorResponseDTO::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulationEvaluationErrorResponseDTO::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
}
inline void SimulationEvaluationErrorResponseDTO::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
}
inline void SimulationEvaluationErrorResponseDTO::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
}
inline std::string* SimulationEvaluationErrorResponseDTO::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulationEvaluationErrorResponseDTO::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulationEvaluationErrorResponseDTO::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.name)
}

// string message = 2;
inline void SimulationEvaluationErrorResponseDTO::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& SimulationEvaluationErrorResponseDTO::message() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
  return _internal_message();
}
inline void SimulationEvaluationErrorResponseDTO::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
}
inline std::string* SimulationEvaluationErrorResponseDTO::mutable_message() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
  return _internal_mutable_message();
}
inline const std::string& SimulationEvaluationErrorResponseDTO::_internal_message() const {
  return message_.Get();
}
inline void SimulationEvaluationErrorResponseDTO::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulationEvaluationErrorResponseDTO::set_message(std::string&& value) {
  
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
}
inline void SimulationEvaluationErrorResponseDTO::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
}
inline void SimulationEvaluationErrorResponseDTO::set_message(const char* value,
    size_t size) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
}
inline std::string* SimulationEvaluationErrorResponseDTO::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulationEvaluationErrorResponseDTO::release_message() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulationEvaluationErrorResponseDTO::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.message)
}

// string exception = 3;
inline void SimulationEvaluationErrorResponseDTO::clear_exception() {
  exception_.ClearToEmpty();
}
inline const std::string& SimulationEvaluationErrorResponseDTO::exception() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
  return _internal_exception();
}
inline void SimulationEvaluationErrorResponseDTO::set_exception(const std::string& value) {
  _internal_set_exception(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
}
inline std::string* SimulationEvaluationErrorResponseDTO::mutable_exception() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
  return _internal_mutable_exception();
}
inline const std::string& SimulationEvaluationErrorResponseDTO::_internal_exception() const {
  return exception_.Get();
}
inline void SimulationEvaluationErrorResponseDTO::_internal_set_exception(const std::string& value) {
  
  exception_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SimulationEvaluationErrorResponseDTO::set_exception(std::string&& value) {
  
  exception_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
}
inline void SimulationEvaluationErrorResponseDTO::set_exception(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  exception_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
}
inline void SimulationEvaluationErrorResponseDTO::set_exception(const char* value,
    size_t size) {
  
  exception_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
}
inline std::string* SimulationEvaluationErrorResponseDTO::_internal_mutable_exception() {
  
  return exception_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SimulationEvaluationErrorResponseDTO::release_exception() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
  return exception_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SimulationEvaluationErrorResponseDTO::set_allocated_exception(std::string* exception) {
  if (exception != nullptr) {
    
  } else {
    
  }
  exception_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), exception,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.exception)
}

// bool abort_optimization = 4;
inline void SimulationEvaluationErrorResponseDTO::clear_abort_optimization() {
  abort_optimization_ = false;
}
inline bool SimulationEvaluationErrorResponseDTO::_internal_abort_optimization() const {
  return abort_optimization_;
}
inline bool SimulationEvaluationErrorResponseDTO::abort_optimization() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.abort_optimization)
  return _internal_abort_optimization();
}
inline void SimulationEvaluationErrorResponseDTO::_internal_set_abort_optimization(bool value) {
  
  abort_optimization_ = value;
}
inline void SimulationEvaluationErrorResponseDTO::set_abort_optimization(bool value) {
  _internal_set_abort_optimization(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.SimulationEvaluationErrorResponseDTO.abort_optimization)
}

// -------------------------------------------------------------------

// SimulationEvaluationErrorConfirmDTO

// -------------------------------------------------------------------

// StatusMessageCommandDTO

// string name = 1;
inline void StatusMessageCommandDTO::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& StatusMessageCommandDTO::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StatusMessageCommandDTO.name)
  return _internal_name();
}
inline void StatusMessageCommandDTO::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StatusMessageCommandDTO.name)
}
inline std::string* StatusMessageCommandDTO::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StatusMessageCommandDTO.name)
  return _internal_mutable_name();
}
inline const std::string& StatusMessageCommandDTO::_internal_name() const {
  return name_.Get();
}
inline void StatusMessageCommandDTO::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StatusMessageCommandDTO::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.StatusMessageCommandDTO.name)
}
inline void StatusMessageCommandDTO::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.StatusMessageCommandDTO.name)
}
inline void StatusMessageCommandDTO::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.StatusMessageCommandDTO.name)
}
inline std::string* StatusMessageCommandDTO::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StatusMessageCommandDTO::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StatusMessageCommandDTO.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StatusMessageCommandDTO::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StatusMessageCommandDTO.name)
}

// string message = 2;
inline void StatusMessageCommandDTO::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& StatusMessageCommandDTO::message() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StatusMessageCommandDTO.message)
  return _internal_message();
}
inline void StatusMessageCommandDTO::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StatusMessageCommandDTO.message)
}
inline std::string* StatusMessageCommandDTO::mutable_message() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StatusMessageCommandDTO.message)
  return _internal_mutable_message();
}
inline const std::string& StatusMessageCommandDTO::_internal_message() const {
  return message_.Get();
}
inline void StatusMessageCommandDTO::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StatusMessageCommandDTO::set_message(std::string&& value) {
  
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.StatusMessageCommandDTO.message)
}
inline void StatusMessageCommandDTO::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.StatusMessageCommandDTO.message)
}
inline void StatusMessageCommandDTO::set_message(const char* value,
    size_t size) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.StatusMessageCommandDTO.message)
}
inline std::string* StatusMessageCommandDTO::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StatusMessageCommandDTO::release_message() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StatusMessageCommandDTO.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StatusMessageCommandDTO::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StatusMessageCommandDTO.message)
}

// -------------------------------------------------------------------

// StatusMessageConfirmDTO

// -------------------------------------------------------------------

// StopOptimizationCommandDTO

// string name = 1;
inline void StopOptimizationCommandDTO::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& StopOptimizationCommandDTO::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StopOptimizationCommandDTO.name)
  return _internal_name();
}
inline void StopOptimizationCommandDTO::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.StopOptimizationCommandDTO.name)
}
inline std::string* StopOptimizationCommandDTO::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StopOptimizationCommandDTO.name)
  return _internal_mutable_name();
}
inline const std::string& StopOptimizationCommandDTO::_internal_name() const {
  return name_.Get();
}
inline void StopOptimizationCommandDTO::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StopOptimizationCommandDTO::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.StopOptimizationCommandDTO.name)
}
inline void StopOptimizationCommandDTO::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.StopOptimizationCommandDTO.name)
}
inline void StopOptimizationCommandDTO::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.StopOptimizationCommandDTO.name)
}
inline std::string* StopOptimizationCommandDTO::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StopOptimizationCommandDTO::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StopOptimizationCommandDTO.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StopOptimizationCommandDTO::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StopOptimizationCommandDTO.name)
}

// .empowerops.volition.dto.UUID run_ID = 2;
inline bool StopOptimizationCommandDTO::_internal_has_run_id() const {
  return this != internal_default_instance() && run_id_ != nullptr;
}
inline bool StopOptimizationCommandDTO::has_run_id() const {
  return _internal_has_run_id();
}
inline void StopOptimizationCommandDTO::clear_run_id() {
  if (GetArena() == nullptr && run_id_ != nullptr) {
    delete run_id_;
  }
  run_id_ = nullptr;
}
inline const ::empowerops::volition::dto::UUID& StopOptimizationCommandDTO::_internal_run_id() const {
  const ::empowerops::volition::dto::UUID* p = run_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::UUID&>(
      ::empowerops::volition::dto::_UUID_default_instance_);
}
inline const ::empowerops::volition::dto::UUID& StopOptimizationCommandDTO::run_id() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StopOptimizationCommandDTO.run_ID)
  return _internal_run_id();
}
inline void StopOptimizationCommandDTO::unsafe_arena_set_allocated_run_id(
    ::empowerops::volition::dto::UUID* run_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_id_);
  }
  run_id_ = run_id;
  if (run_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StopOptimizationCommandDTO.run_ID)
}
inline ::empowerops::volition::dto::UUID* StopOptimizationCommandDTO::release_run_id() {
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::UUID* StopOptimizationCommandDTO::unsafe_arena_release_run_id() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StopOptimizationCommandDTO.run_ID)
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::UUID* StopOptimizationCommandDTO::_internal_mutable_run_id() {
  
  if (run_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::UUID>(GetArena());
    run_id_ = p;
  }
  return run_id_;
}
inline ::empowerops::volition::dto::UUID* StopOptimizationCommandDTO::mutable_run_id() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StopOptimizationCommandDTO.run_ID)
  return _internal_mutable_run_id();
}
inline void StopOptimizationCommandDTO::set_allocated_run_id(::empowerops::volition::dto::UUID* run_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete run_id_;
  }
  if (run_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(run_id);
    if (message_arena != submessage_arena) {
      run_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_id, submessage_arena);
    }
    
  } else {
    
  }
  run_id_ = run_id;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StopOptimizationCommandDTO.run_ID)
}

// -------------------------------------------------------------------

// StopOptimizationConfirmDTO

// .empowerops.volition.dto.UUID run_ID = 2;
inline bool StopOptimizationConfirmDTO::_internal_has_run_id() const {
  return this != internal_default_instance() && run_id_ != nullptr;
}
inline bool StopOptimizationConfirmDTO::has_run_id() const {
  return _internal_has_run_id();
}
inline void StopOptimizationConfirmDTO::clear_run_id() {
  if (GetArena() == nullptr && run_id_ != nullptr) {
    delete run_id_;
  }
  run_id_ = nullptr;
}
inline const ::empowerops::volition::dto::UUID& StopOptimizationConfirmDTO::_internal_run_id() const {
  const ::empowerops::volition::dto::UUID* p = run_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::UUID&>(
      ::empowerops::volition::dto::_UUID_default_instance_);
}
inline const ::empowerops::volition::dto::UUID& StopOptimizationConfirmDTO::run_id() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.StopOptimizationConfirmDTO.run_ID)
  return _internal_run_id();
}
inline void StopOptimizationConfirmDTO::unsafe_arena_set_allocated_run_id(
    ::empowerops::volition::dto::UUID* run_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_id_);
  }
  run_id_ = run_id;
  if (run_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.StopOptimizationConfirmDTO.run_ID)
}
inline ::empowerops::volition::dto::UUID* StopOptimizationConfirmDTO::release_run_id() {
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::UUID* StopOptimizationConfirmDTO::unsafe_arena_release_run_id() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.StopOptimizationConfirmDTO.run_ID)
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::UUID* StopOptimizationConfirmDTO::_internal_mutable_run_id() {
  
  if (run_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::UUID>(GetArena());
    run_id_ = p;
  }
  return run_id_;
}
inline ::empowerops::volition::dto::UUID* StopOptimizationConfirmDTO::mutable_run_id() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.StopOptimizationConfirmDTO.run_ID)
  return _internal_mutable_run_id();
}
inline void StopOptimizationConfirmDTO::set_allocated_run_id(::empowerops::volition::dto::UUID* run_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete run_id_;
  }
  if (run_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(run_id);
    if (message_arena != submessage_arena) {
      run_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_id, submessage_arena);
    }
    
  } else {
    
  }
  run_id_ = run_id;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.StopOptimizationConfirmDTO.run_ID)
}

// -------------------------------------------------------------------

// OptimizationResultsQueryDTO

// string name = 1;
inline void OptimizationResultsQueryDTO::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& OptimizationResultsQueryDTO::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
  return _internal_name();
}
inline void OptimizationResultsQueryDTO::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
}
inline std::string* OptimizationResultsQueryDTO::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
  return _internal_mutable_name();
}
inline const std::string& OptimizationResultsQueryDTO::_internal_name() const {
  return name_.Get();
}
inline void OptimizationResultsQueryDTO::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OptimizationResultsQueryDTO::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
}
inline void OptimizationResultsQueryDTO::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
}
inline void OptimizationResultsQueryDTO::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
}
inline std::string* OptimizationResultsQueryDTO::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OptimizationResultsQueryDTO::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OptimizationResultsQueryDTO::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizationResultsQueryDTO.name)
}

// .empowerops.volition.dto.UUID run_ID = 2;
inline bool OptimizationResultsQueryDTO::_internal_has_run_id() const {
  return this != internal_default_instance() && run_id_ != nullptr;
}
inline bool OptimizationResultsQueryDTO::has_run_id() const {
  return _internal_has_run_id();
}
inline void OptimizationResultsQueryDTO::clear_run_id() {
  if (GetArena() == nullptr && run_id_ != nullptr) {
    delete run_id_;
  }
  run_id_ = nullptr;
}
inline const ::empowerops::volition::dto::UUID& OptimizationResultsQueryDTO::_internal_run_id() const {
  const ::empowerops::volition::dto::UUID* p = run_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::UUID&>(
      ::empowerops::volition::dto::_UUID_default_instance_);
}
inline const ::empowerops::volition::dto::UUID& OptimizationResultsQueryDTO::run_id() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsQueryDTO.run_ID)
  return _internal_run_id();
}
inline void OptimizationResultsQueryDTO::unsafe_arena_set_allocated_run_id(
    ::empowerops::volition::dto::UUID* run_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_id_);
  }
  run_id_ = run_id;
  if (run_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizationResultsQueryDTO.run_ID)
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsQueryDTO::release_run_id() {
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsQueryDTO::unsafe_arena_release_run_id() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizationResultsQueryDTO.run_ID)
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsQueryDTO::_internal_mutable_run_id() {
  
  if (run_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::UUID>(GetArena());
    run_id_ = p;
  }
  return run_id_;
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsQueryDTO::mutable_run_id() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsQueryDTO.run_ID)
  return _internal_mutable_run_id();
}
inline void OptimizationResultsQueryDTO::set_allocated_run_id(::empowerops::volition::dto::UUID* run_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete run_id_;
  }
  if (run_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(run_id);
    if (message_arena != submessage_arena) {
      run_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_id, submessage_arena);
    }
    
  } else {
    
  }
  run_id_ = run_id;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizationResultsQueryDTO.run_ID)
}

// -------------------------------------------------------------------

// OptimizationResultsResponseDTO

// .empowerops.volition.dto.UUID run_ID = 1;
inline bool OptimizationResultsResponseDTO::_internal_has_run_id() const {
  return this != internal_default_instance() && run_id_ != nullptr;
}
inline bool OptimizationResultsResponseDTO::has_run_id() const {
  return _internal_has_run_id();
}
inline void OptimizationResultsResponseDTO::clear_run_id() {
  if (GetArena() == nullptr && run_id_ != nullptr) {
    delete run_id_;
  }
  run_id_ = nullptr;
}
inline const ::empowerops::volition::dto::UUID& OptimizationResultsResponseDTO::_internal_run_id() const {
  const ::empowerops::volition::dto::UUID* p = run_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::empowerops::volition::dto::UUID&>(
      ::empowerops::volition::dto::_UUID_default_instance_);
}
inline const ::empowerops::volition::dto::UUID& OptimizationResultsResponseDTO::run_id() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsResponseDTO.run_ID)
  return _internal_run_id();
}
inline void OptimizationResultsResponseDTO::unsafe_arena_set_allocated_run_id(
    ::empowerops::volition::dto::UUID* run_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(run_id_);
  }
  run_id_ = run_id;
  if (run_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.OptimizationResultsResponseDTO.run_ID)
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsResponseDTO::release_run_id() {
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsResponseDTO::unsafe_arena_release_run_id() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.OptimizationResultsResponseDTO.run_ID)
  
  ::empowerops::volition::dto::UUID* temp = run_id_;
  run_id_ = nullptr;
  return temp;
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsResponseDTO::_internal_mutable_run_id() {
  
  if (run_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::empowerops::volition::dto::UUID>(GetArena());
    run_id_ = p;
  }
  return run_id_;
}
inline ::empowerops::volition::dto::UUID* OptimizationResultsResponseDTO::mutable_run_id() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.run_ID)
  return _internal_mutable_run_id();
}
inline void OptimizationResultsResponseDTO::set_allocated_run_id(::empowerops::volition::dto::UUID* run_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete run_id_;
  }
  if (run_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(run_id);
    if (message_arena != submessage_arena) {
      run_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run_id, submessage_arena);
    }
    
  } else {
    
  }
  run_id_ = run_id;
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.OptimizationResultsResponseDTO.run_ID)
}

// repeated string input_columns = 7;
inline int OptimizationResultsResponseDTO::_internal_input_columns_size() const {
  return input_columns_.size();
}
inline int OptimizationResultsResponseDTO::input_columns_size() const {
  return _internal_input_columns_size();
}
inline void OptimizationResultsResponseDTO::clear_input_columns() {
  input_columns_.Clear();
}
inline std::string* OptimizationResultsResponseDTO::add_input_columns() {
  // @@protoc_insertion_point(field_add_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  return _internal_add_input_columns();
}
inline const std::string& OptimizationResultsResponseDTO::_internal_input_columns(int index) const {
  return input_columns_.Get(index);
}
inline const std::string& OptimizationResultsResponseDTO::input_columns(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  return _internal_input_columns(index);
}
inline std::string* OptimizationResultsResponseDTO::mutable_input_columns(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  return input_columns_.Mutable(index);
}
inline void OptimizationResultsResponseDTO::set_input_columns(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  input_columns_.Mutable(index)->assign(value);
}
inline void OptimizationResultsResponseDTO::set_input_columns(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  input_columns_.Mutable(index)->assign(std::move(value));
}
inline void OptimizationResultsResponseDTO::set_input_columns(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  input_columns_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
}
inline void OptimizationResultsResponseDTO::set_input_columns(int index, const char* value, size_t size) {
  input_columns_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
}
inline std::string* OptimizationResultsResponseDTO::_internal_add_input_columns() {
  return input_columns_.Add();
}
inline void OptimizationResultsResponseDTO::add_input_columns(const std::string& value) {
  input_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
}
inline void OptimizationResultsResponseDTO::add_input_columns(std::string&& value) {
  input_columns_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
}
inline void OptimizationResultsResponseDTO::add_input_columns(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  input_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
}
inline void OptimizationResultsResponseDTO::add_input_columns(const char* value, size_t size) {
  input_columns_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
OptimizationResultsResponseDTO::input_columns() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  return input_columns_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
OptimizationResultsResponseDTO::mutable_input_columns() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.OptimizationResultsResponseDTO.input_columns)
  return &input_columns_;
}

// repeated string output_columns = 8;
inline int OptimizationResultsResponseDTO::_internal_output_columns_size() const {
  return output_columns_.size();
}
inline int OptimizationResultsResponseDTO::output_columns_size() const {
  return _internal_output_columns_size();
}
inline void OptimizationResultsResponseDTO::clear_output_columns() {
  output_columns_.Clear();
}
inline std::string* OptimizationResultsResponseDTO::add_output_columns() {
  // @@protoc_insertion_point(field_add_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  return _internal_add_output_columns();
}
inline const std::string& OptimizationResultsResponseDTO::_internal_output_columns(int index) const {
  return output_columns_.Get(index);
}
inline const std::string& OptimizationResultsResponseDTO::output_columns(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  return _internal_output_columns(index);
}
inline std::string* OptimizationResultsResponseDTO::mutable_output_columns(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  return output_columns_.Mutable(index);
}
inline void OptimizationResultsResponseDTO::set_output_columns(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  output_columns_.Mutable(index)->assign(value);
}
inline void OptimizationResultsResponseDTO::set_output_columns(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  output_columns_.Mutable(index)->assign(std::move(value));
}
inline void OptimizationResultsResponseDTO::set_output_columns(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  output_columns_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
}
inline void OptimizationResultsResponseDTO::set_output_columns(int index, const char* value, size_t size) {
  output_columns_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
}
inline std::string* OptimizationResultsResponseDTO::_internal_add_output_columns() {
  return output_columns_.Add();
}
inline void OptimizationResultsResponseDTO::add_output_columns(const std::string& value) {
  output_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
}
inline void OptimizationResultsResponseDTO::add_output_columns(std::string&& value) {
  output_columns_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
}
inline void OptimizationResultsResponseDTO::add_output_columns(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  output_columns_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
}
inline void OptimizationResultsResponseDTO::add_output_columns(const char* value, size_t size) {
  output_columns_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
OptimizationResultsResponseDTO::output_columns() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  return output_columns_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
OptimizationResultsResponseDTO::mutable_output_columns() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.OptimizationResultsResponseDTO.output_columns)
  return &output_columns_;
}

// repeated .empowerops.volition.dto.DesignRow points = 9;
inline int OptimizationResultsResponseDTO::_internal_points_size() const {
  return points_.size();
}
inline int OptimizationResultsResponseDTO::points_size() const {
  return _internal_points_size();
}
inline void OptimizationResultsResponseDTO::clear_points() {
  points_.Clear();
}
inline ::empowerops::volition::dto::DesignRow* OptimizationResultsResponseDTO::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >*
OptimizationResultsResponseDTO::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.OptimizationResultsResponseDTO.points)
  return &points_;
}
inline const ::empowerops::volition::dto::DesignRow& OptimizationResultsResponseDTO::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::empowerops::volition::dto::DesignRow& OptimizationResultsResponseDTO::points(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsResponseDTO.points)
  return _internal_points(index);
}
inline ::empowerops::volition::dto::DesignRow* OptimizationResultsResponseDTO::_internal_add_points() {
  return points_.Add();
}
inline ::empowerops::volition::dto::DesignRow* OptimizationResultsResponseDTO::add_points() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizationResultsResponseDTO.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >&
OptimizationResultsResponseDTO::points() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.OptimizationResultsResponseDTO.points)
  return points_;
}

// repeated .empowerops.volition.dto.DesignRow frontier = 10;
inline int OptimizationResultsResponseDTO::_internal_frontier_size() const {
  return frontier_.size();
}
inline int OptimizationResultsResponseDTO::frontier_size() const {
  return _internal_frontier_size();
}
inline void OptimizationResultsResponseDTO::clear_frontier() {
  frontier_.Clear();
}
inline ::empowerops::volition::dto::DesignRow* OptimizationResultsResponseDTO::mutable_frontier(int index) {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.OptimizationResultsResponseDTO.frontier)
  return frontier_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >*
OptimizationResultsResponseDTO::mutable_frontier() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.OptimizationResultsResponseDTO.frontier)
  return &frontier_;
}
inline const ::empowerops::volition::dto::DesignRow& OptimizationResultsResponseDTO::_internal_frontier(int index) const {
  return frontier_.Get(index);
}
inline const ::empowerops::volition::dto::DesignRow& OptimizationResultsResponseDTO::frontier(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.OptimizationResultsResponseDTO.frontier)
  return _internal_frontier(index);
}
inline ::empowerops::volition::dto::DesignRow* OptimizationResultsResponseDTO::_internal_add_frontier() {
  return frontier_.Add();
}
inline ::empowerops::volition::dto::DesignRow* OptimizationResultsResponseDTO::add_frontier() {
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.OptimizationResultsResponseDTO.frontier)
  return _internal_add_frontier();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::empowerops::volition::dto::DesignRow >&
OptimizationResultsResponseDTO::frontier() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.OptimizationResultsResponseDTO.frontier)
  return frontier_;
}

// -------------------------------------------------------------------

// PrototypeInputParameter_Continuous

// double lower_bound = 2;
inline void PrototypeInputParameter_Continuous::clear_lower_bound() {
  lower_bound_ = 0;
}
inline double PrototypeInputParameter_Continuous::_internal_lower_bound() const {
  return lower_bound_;
}
inline double PrototypeInputParameter_Continuous::lower_bound() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.Continuous.lower_bound)
  return _internal_lower_bound();
}
inline void PrototypeInputParameter_Continuous::_internal_set_lower_bound(double value) {
  
  lower_bound_ = value;
}
inline void PrototypeInputParameter_Continuous::set_lower_bound(double value) {
  _internal_set_lower_bound(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeInputParameter.Continuous.lower_bound)
}

// double upper_bound = 3;
inline void PrototypeInputParameter_Continuous::clear_upper_bound() {
  upper_bound_ = 0;
}
inline double PrototypeInputParameter_Continuous::_internal_upper_bound() const {
  return upper_bound_;
}
inline double PrototypeInputParameter_Continuous::upper_bound() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.Continuous.upper_bound)
  return _internal_upper_bound();
}
inline void PrototypeInputParameter_Continuous::_internal_set_upper_bound(double value) {
  
  upper_bound_ = value;
}
inline void PrototypeInputParameter_Continuous::set_upper_bound(double value) {
  _internal_set_upper_bound(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeInputParameter.Continuous.upper_bound)
}

// -------------------------------------------------------------------

// PrototypeInputParameter_DiscreteRange

// double lower_bound = 2;
inline void PrototypeInputParameter_DiscreteRange::clear_lower_bound() {
  lower_bound_ = 0;
}
inline double PrototypeInputParameter_DiscreteRange::_internal_lower_bound() const {
  return lower_bound_;
}
inline double PrototypeInputParameter_DiscreteRange::lower_bound() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange.lower_bound)
  return _internal_lower_bound();
}
inline void PrototypeInputParameter_DiscreteRange::_internal_set_lower_bound(double value) {
  
  lower_bound_ = value;
}
inline void PrototypeInputParameter_DiscreteRange::set_lower_bound(double value) {
  _internal_set_lower_bound(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange.lower_bound)
}

// double upper_bound = 3;
inline void PrototypeInputParameter_DiscreteRange::clear_upper_bound() {
  upper_bound_ = 0;
}
inline double PrototypeInputParameter_DiscreteRange::_internal_upper_bound() const {
  return upper_bound_;
}
inline double PrototypeInputParameter_DiscreteRange::upper_bound() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange.upper_bound)
  return _internal_upper_bound();
}
inline void PrototypeInputParameter_DiscreteRange::_internal_set_upper_bound(double value) {
  
  upper_bound_ = value;
}
inline void PrototypeInputParameter_DiscreteRange::set_upper_bound(double value) {
  _internal_set_upper_bound(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange.upper_bound)
}

// double step_size = 4;
inline void PrototypeInputParameter_DiscreteRange::clear_step_size() {
  step_size_ = 0;
}
inline double PrototypeInputParameter_DiscreteRange::_internal_step_size() const {
  return step_size_;
}
inline double PrototypeInputParameter_DiscreteRange::step_size() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange.step_size)
  return _internal_step_size();
}
inline void PrototypeInputParameter_DiscreteRange::_internal_set_step_size(double value) {
  
  step_size_ = value;
}
inline void PrototypeInputParameter_DiscreteRange::set_step_size(double value) {
  _internal_set_step_size(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeInputParameter.DiscreteRange.step_size)
}

// -------------------------------------------------------------------

// PrototypeInputParameter

// string name = 1;
inline void PrototypeInputParameter::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& PrototypeInputParameter::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.name)
  return _internal_name();
}
inline void PrototypeInputParameter::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeInputParameter.name)
}
inline std::string* PrototypeInputParameter::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.PrototypeInputParameter.name)
  return _internal_mutable_name();
}
inline const std::string& PrototypeInputParameter::_internal_name() const {
  return name_.Get();
}
inline void PrototypeInputParameter::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void PrototypeInputParameter::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.PrototypeInputParameter.name)
}
inline void PrototypeInputParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.PrototypeInputParameter.name)
}
inline void PrototypeInputParameter::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.PrototypeInputParameter.name)
}
inline std::string* PrototypeInputParameter::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* PrototypeInputParameter::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.PrototypeInputParameter.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PrototypeInputParameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.PrototypeInputParameter.name)
}

// .empowerops.volition.dto.PrototypeInputParameter.Continuous continuous = 4;
inline bool PrototypeInputParameter::_internal_has_continuous() const {
  return domain_case() == kContinuous;
}
inline bool PrototypeInputParameter::has_continuous() const {
  return _internal_has_continuous();
}
inline void PrototypeInputParameter::set_has_continuous() {
  _oneof_case_[0] = kContinuous;
}
inline void PrototypeInputParameter::clear_continuous() {
  if (_internal_has_continuous()) {
    if (GetArena() == nullptr) {
      delete domain_.continuous_;
    }
    clear_has_domain();
  }
}
inline ::empowerops::volition::dto::PrototypeInputParameter_Continuous* PrototypeInputParameter::release_continuous() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.PrototypeInputParameter.continuous)
  if (_internal_has_continuous()) {
    clear_has_domain();
      ::empowerops::volition::dto::PrototypeInputParameter_Continuous* temp = domain_.continuous_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    domain_.continuous_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::PrototypeInputParameter_Continuous& PrototypeInputParameter::_internal_continuous() const {
  return _internal_has_continuous()
      ? *domain_.continuous_
      : reinterpret_cast< ::empowerops::volition::dto::PrototypeInputParameter_Continuous&>(::empowerops::volition::dto::_PrototypeInputParameter_Continuous_default_instance_);
}
inline const ::empowerops::volition::dto::PrototypeInputParameter_Continuous& PrototypeInputParameter::continuous() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.continuous)
  return _internal_continuous();
}
inline ::empowerops::volition::dto::PrototypeInputParameter_Continuous* PrototypeInputParameter::unsafe_arena_release_continuous() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.PrototypeInputParameter.continuous)
  if (_internal_has_continuous()) {
    clear_has_domain();
    ::empowerops::volition::dto::PrototypeInputParameter_Continuous* temp = domain_.continuous_;
    domain_.continuous_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PrototypeInputParameter::unsafe_arena_set_allocated_continuous(::empowerops::volition::dto::PrototypeInputParameter_Continuous* continuous) {
  clear_domain();
  if (continuous) {
    set_has_continuous();
    domain_.continuous_ = continuous;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.PrototypeInputParameter.continuous)
}
inline ::empowerops::volition::dto::PrototypeInputParameter_Continuous* PrototypeInputParameter::_internal_mutable_continuous() {
  if (!_internal_has_continuous()) {
    clear_domain();
    set_has_continuous();
    domain_.continuous_ = CreateMaybeMessage< ::empowerops::volition::dto::PrototypeInputParameter_Continuous >(GetArena());
  }
  return domain_.continuous_;
}
inline ::empowerops::volition::dto::PrototypeInputParameter_Continuous* PrototypeInputParameter::mutable_continuous() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.PrototypeInputParameter.continuous)
  return _internal_mutable_continuous();
}

// .empowerops.volition.dto.PrototypeInputParameter.DiscreteRange discrete_range = 5;
inline bool PrototypeInputParameter::_internal_has_discrete_range() const {
  return domain_case() == kDiscreteRange;
}
inline bool PrototypeInputParameter::has_discrete_range() const {
  return _internal_has_discrete_range();
}
inline void PrototypeInputParameter::set_has_discrete_range() {
  _oneof_case_[0] = kDiscreteRange;
}
inline void PrototypeInputParameter::clear_discrete_range() {
  if (_internal_has_discrete_range()) {
    if (GetArena() == nullptr) {
      delete domain_.discrete_range_;
    }
    clear_has_domain();
  }
}
inline ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* PrototypeInputParameter::release_discrete_range() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.PrototypeInputParameter.discrete_range)
  if (_internal_has_discrete_range()) {
    clear_has_domain();
      ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* temp = domain_.discrete_range_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    domain_.discrete_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange& PrototypeInputParameter::_internal_discrete_range() const {
  return _internal_has_discrete_range()
      ? *domain_.discrete_range_
      : reinterpret_cast< ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange&>(::empowerops::volition::dto::_PrototypeInputParameter_DiscreteRange_default_instance_);
}
inline const ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange& PrototypeInputParameter::discrete_range() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeInputParameter.discrete_range)
  return _internal_discrete_range();
}
inline ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* PrototypeInputParameter::unsafe_arena_release_discrete_range() {
  // @@protoc_insertion_point(field_unsafe_arena_release:empowerops.volition.dto.PrototypeInputParameter.discrete_range)
  if (_internal_has_discrete_range()) {
    clear_has_domain();
    ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* temp = domain_.discrete_range_;
    domain_.discrete_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PrototypeInputParameter::unsafe_arena_set_allocated_discrete_range(::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* discrete_range) {
  clear_domain();
  if (discrete_range) {
    set_has_discrete_range();
    domain_.discrete_range_ = discrete_range;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:empowerops.volition.dto.PrototypeInputParameter.discrete_range)
}
inline ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* PrototypeInputParameter::_internal_mutable_discrete_range() {
  if (!_internal_has_discrete_range()) {
    clear_domain();
    set_has_discrete_range();
    domain_.discrete_range_ = CreateMaybeMessage< ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange >(GetArena());
  }
  return domain_.discrete_range_;
}
inline ::empowerops::volition::dto::PrototypeInputParameter_DiscreteRange* PrototypeInputParameter::mutable_discrete_range() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.PrototypeInputParameter.discrete_range)
  return _internal_mutable_discrete_range();
}

inline bool PrototypeInputParameter::has_domain() const {
  return domain_case() != DOMAIN_NOT_SET;
}
inline void PrototypeInputParameter::clear_has_domain() {
  _oneof_case_[0] = DOMAIN_NOT_SET;
}
inline PrototypeInputParameter::DomainCase PrototypeInputParameter::domain_case() const {
  return PrototypeInputParameter::DomainCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PrototypeOutputParameter

// string name = 1;
inline void PrototypeOutputParameter::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& PrototypeOutputParameter::name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.PrototypeOutputParameter.name)
  return _internal_name();
}
inline void PrototypeOutputParameter::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.PrototypeOutputParameter.name)
}
inline std::string* PrototypeOutputParameter::mutable_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.PrototypeOutputParameter.name)
  return _internal_mutable_name();
}
inline const std::string& PrototypeOutputParameter::_internal_name() const {
  return name_.Get();
}
inline void PrototypeOutputParameter::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void PrototypeOutputParameter::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.PrototypeOutputParameter.name)
}
inline void PrototypeOutputParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.PrototypeOutputParameter.name)
}
inline void PrototypeOutputParameter::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.PrototypeOutputParameter.name)
}
inline std::string* PrototypeOutputParameter::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* PrototypeOutputParameter::release_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.PrototypeOutputParameter.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PrototypeOutputParameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.PrototypeOutputParameter.name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// VariableMapping

// map<string, string> inputs = 1;
inline int VariableMapping::_internal_inputs_size() const {
  return inputs_.size();
}
inline int VariableMapping::inputs_size() const {
  return _internal_inputs_size();
}
inline void VariableMapping::clear_inputs() {
  inputs_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
VariableMapping::_internal_inputs() const {
  return inputs_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
VariableMapping::inputs() const {
  // @@protoc_insertion_point(field_map:empowerops.volition.dto.VariableMapping.inputs)
  return _internal_inputs();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
VariableMapping::_internal_mutable_inputs() {
  return inputs_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
VariableMapping::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_map:empowerops.volition.dto.VariableMapping.inputs)
  return _internal_mutable_inputs();
}

// map<string, string> outputs = 2;
inline int VariableMapping::_internal_outputs_size() const {
  return outputs_.size();
}
inline int VariableMapping::outputs_size() const {
  return _internal_outputs_size();
}
inline void VariableMapping::clear_outputs() {
  outputs_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
VariableMapping::_internal_outputs() const {
  return outputs_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
VariableMapping::outputs() const {
  // @@protoc_insertion_point(field_map:empowerops.volition.dto.VariableMapping.outputs)
  return _internal_outputs();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
VariableMapping::_internal_mutable_outputs() {
  return outputs_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
VariableMapping::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_map:empowerops.volition.dto.VariableMapping.outputs)
  return _internal_mutable_outputs();
}

// -------------------------------------------------------------------

// BabelConstraint

// string output_name = 1;
inline void BabelConstraint::clear_output_name() {
  output_name_.ClearToEmpty();
}
inline const std::string& BabelConstraint::output_name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.BabelConstraint.output_name)
  return _internal_output_name();
}
inline void BabelConstraint::set_output_name(const std::string& value) {
  _internal_set_output_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.BabelConstraint.output_name)
}
inline std::string* BabelConstraint::mutable_output_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.BabelConstraint.output_name)
  return _internal_mutable_output_name();
}
inline const std::string& BabelConstraint::_internal_output_name() const {
  return output_name_.Get();
}
inline void BabelConstraint::_internal_set_output_name(const std::string& value) {
  
  output_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BabelConstraint::set_output_name(std::string&& value) {
  
  output_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.BabelConstraint.output_name)
}
inline void BabelConstraint::set_output_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.BabelConstraint.output_name)
}
inline void BabelConstraint::set_output_name(const char* value,
    size_t size) {
  
  output_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.BabelConstraint.output_name)
}
inline std::string* BabelConstraint::_internal_mutable_output_name() {
  
  return output_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BabelConstraint::release_output_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.BabelConstraint.output_name)
  return output_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BabelConstraint::set_allocated_output_name(std::string* output_name) {
  if (output_name != nullptr) {
    
  } else {
    
  }
  output_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), output_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.BabelConstraint.output_name)
}

// string boolean_expression = 2;
inline void BabelConstraint::clear_boolean_expression() {
  boolean_expression_.ClearToEmpty();
}
inline const std::string& BabelConstraint::boolean_expression() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.BabelConstraint.boolean_expression)
  return _internal_boolean_expression();
}
inline void BabelConstraint::set_boolean_expression(const std::string& value) {
  _internal_set_boolean_expression(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.BabelConstraint.boolean_expression)
}
inline std::string* BabelConstraint::mutable_boolean_expression() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.BabelConstraint.boolean_expression)
  return _internal_mutable_boolean_expression();
}
inline const std::string& BabelConstraint::_internal_boolean_expression() const {
  return boolean_expression_.Get();
}
inline void BabelConstraint::_internal_set_boolean_expression(const std::string& value) {
  
  boolean_expression_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BabelConstraint::set_boolean_expression(std::string&& value) {
  
  boolean_expression_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.BabelConstraint.boolean_expression)
}
inline void BabelConstraint::set_boolean_expression(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  boolean_expression_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.BabelConstraint.boolean_expression)
}
inline void BabelConstraint::set_boolean_expression(const char* value,
    size_t size) {
  
  boolean_expression_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.BabelConstraint.boolean_expression)
}
inline std::string* BabelConstraint::_internal_mutable_boolean_expression() {
  
  return boolean_expression_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BabelConstraint::release_boolean_expression() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.BabelConstraint.boolean_expression)
  return boolean_expression_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BabelConstraint::set_allocated_boolean_expression(std::string* boolean_expression) {
  if (boolean_expression != nullptr) {
    
  } else {
    
  }
  boolean_expression_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boolean_expression,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.BabelConstraint.boolean_expression)
}

// -------------------------------------------------------------------

// BabelScalar

// string output_name = 1;
inline void BabelScalar::clear_output_name() {
  output_name_.ClearToEmpty();
}
inline const std::string& BabelScalar::output_name() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.BabelScalar.output_name)
  return _internal_output_name();
}
inline void BabelScalar::set_output_name(const std::string& value) {
  _internal_set_output_name(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.BabelScalar.output_name)
}
inline std::string* BabelScalar::mutable_output_name() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.BabelScalar.output_name)
  return _internal_mutable_output_name();
}
inline const std::string& BabelScalar::_internal_output_name() const {
  return output_name_.Get();
}
inline void BabelScalar::_internal_set_output_name(const std::string& value) {
  
  output_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BabelScalar::set_output_name(std::string&& value) {
  
  output_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.BabelScalar.output_name)
}
inline void BabelScalar::set_output_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.BabelScalar.output_name)
}
inline void BabelScalar::set_output_name(const char* value,
    size_t size) {
  
  output_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.BabelScalar.output_name)
}
inline std::string* BabelScalar::_internal_mutable_output_name() {
  
  return output_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BabelScalar::release_output_name() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.BabelScalar.output_name)
  return output_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BabelScalar::set_allocated_output_name(std::string* output_name) {
  if (output_name != nullptr) {
    
  } else {
    
  }
  output_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), output_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.BabelScalar.output_name)
}

// string scalar_expression = 2;
inline void BabelScalar::clear_scalar_expression() {
  scalar_expression_.ClearToEmpty();
}
inline const std::string& BabelScalar::scalar_expression() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.BabelScalar.scalar_expression)
  return _internal_scalar_expression();
}
inline void BabelScalar::set_scalar_expression(const std::string& value) {
  _internal_set_scalar_expression(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.BabelScalar.scalar_expression)
}
inline std::string* BabelScalar::mutable_scalar_expression() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.BabelScalar.scalar_expression)
  return _internal_mutable_scalar_expression();
}
inline const std::string& BabelScalar::_internal_scalar_expression() const {
  return scalar_expression_.Get();
}
inline void BabelScalar::_internal_set_scalar_expression(const std::string& value) {
  
  scalar_expression_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BabelScalar::set_scalar_expression(std::string&& value) {
  
  scalar_expression_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.BabelScalar.scalar_expression)
}
inline void BabelScalar::set_scalar_expression(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  scalar_expression_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.BabelScalar.scalar_expression)
}
inline void BabelScalar::set_scalar_expression(const char* value,
    size_t size) {
  
  scalar_expression_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.BabelScalar.scalar_expression)
}
inline std::string* BabelScalar::_internal_mutable_scalar_expression() {
  
  return scalar_expression_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BabelScalar::release_scalar_expression() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.BabelScalar.scalar_expression)
  return scalar_expression_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BabelScalar::set_allocated_scalar_expression(std::string* scalar_expression) {
  if (scalar_expression != nullptr) {
    
  } else {
    
  }
  scalar_expression_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), scalar_expression,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.BabelScalar.scalar_expression)
}

// -------------------------------------------------------------------

// DesignRow

// repeated double inputs = 1;
inline int DesignRow::_internal_inputs_size() const {
  return inputs_.size();
}
inline int DesignRow::inputs_size() const {
  return _internal_inputs_size();
}
inline void DesignRow::clear_inputs() {
  inputs_.Clear();
}
inline double DesignRow::_internal_inputs(int index) const {
  return inputs_.Get(index);
}
inline double DesignRow::inputs(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.DesignRow.inputs)
  return _internal_inputs(index);
}
inline void DesignRow::set_inputs(int index, double value) {
  inputs_.Set(index, value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.DesignRow.inputs)
}
inline void DesignRow::_internal_add_inputs(double value) {
  inputs_.Add(value);
}
inline void DesignRow::add_inputs(double value) {
  _internal_add_inputs(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.DesignRow.inputs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DesignRow::_internal_inputs() const {
  return inputs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DesignRow::inputs() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.DesignRow.inputs)
  return _internal_inputs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DesignRow::_internal_mutable_inputs() {
  return &inputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DesignRow::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.DesignRow.inputs)
  return _internal_mutable_inputs();
}

// repeated double outputs = 2;
inline int DesignRow::_internal_outputs_size() const {
  return outputs_.size();
}
inline int DesignRow::outputs_size() const {
  return _internal_outputs_size();
}
inline void DesignRow::clear_outputs() {
  outputs_.Clear();
}
inline double DesignRow::_internal_outputs(int index) const {
  return outputs_.Get(index);
}
inline double DesignRow::outputs(int index) const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.DesignRow.outputs)
  return _internal_outputs(index);
}
inline void DesignRow::set_outputs(int index, double value) {
  outputs_.Set(index, value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.DesignRow.outputs)
}
inline void DesignRow::_internal_add_outputs(double value) {
  outputs_.Add(value);
}
inline void DesignRow::add_outputs(double value) {
  _internal_add_outputs(value);
  // @@protoc_insertion_point(field_add:empowerops.volition.dto.DesignRow.outputs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DesignRow::_internal_outputs() const {
  return outputs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DesignRow::outputs() const {
  // @@protoc_insertion_point(field_list:empowerops.volition.dto.DesignRow.outputs)
  return _internal_outputs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DesignRow::_internal_mutable_outputs() {
  return &outputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DesignRow::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:empowerops.volition.dto.DesignRow.outputs)
  return _internal_mutable_outputs();
}

// bool is_feasible = 3;
inline void DesignRow::clear_is_feasible() {
  is_feasible_ = false;
}
inline bool DesignRow::_internal_is_feasible() const {
  return is_feasible_;
}
inline bool DesignRow::is_feasible() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.DesignRow.is_feasible)
  return _internal_is_feasible();
}
inline void DesignRow::_internal_set_is_feasible(bool value) {
  
  is_feasible_ = value;
}
inline void DesignRow::set_is_feasible(bool value) {
  _internal_set_is_feasible(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.DesignRow.is_feasible)
}

// -------------------------------------------------------------------

// UUID

// string value = 1;
inline void UUID::clear_value() {
  value_.ClearToEmpty();
}
inline const std::string& UUID::value() const {
  // @@protoc_insertion_point(field_get:empowerops.volition.dto.UUID.value)
  return _internal_value();
}
inline void UUID::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:empowerops.volition.dto.UUID.value)
}
inline std::string* UUID::mutable_value() {
  // @@protoc_insertion_point(field_mutable:empowerops.volition.dto.UUID.value)
  return _internal_mutable_value();
}
inline const std::string& UUID::_internal_value() const {
  return value_.Get();
}
inline void UUID::_internal_set_value(const std::string& value) {
  
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UUID::set_value(std::string&& value) {
  
  value_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:empowerops.volition.dto.UUID.value)
}
inline void UUID::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:empowerops.volition.dto.UUID.value)
}
inline void UUID::set_value(const char* value,
    size_t size) {
  
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:empowerops.volition.dto.UUID.value)
}
inline std::string* UUID::_internal_mutable_value() {
  
  return value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UUID::release_value() {
  // @@protoc_insertion_point(field_release:empowerops.volition.dto.UUID.value)
  return value_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UUID::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:empowerops.volition.dto.UUID.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dto
}  // namespace volition
}  // namespace empowerops

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_optimizer_2eproto
